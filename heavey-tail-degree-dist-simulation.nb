(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    473554,       9661]
NotebookOptionsPosition[    464603,       9519]
NotebookOutlinePosition[    465024,       9535]
CellTagsIndexPosition[    464981,       9532]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Simulation of the max stationary values inDirected Configuration Model (DCM) \
with power-law in-degree  distribution\
\>", "Title",
 CellChangeTimes->{{3.826302176681171*^9, 
  3.8263022415654182`*^9}},ExpressionUUID->"d42c93f8-3191-4e30-be36-\
3dde0204c4cc"],

Cell[CellGroupData[{

Cell["Setup", "Chapter",
 CellChangeTimes->{{3.8141822152249403`*^9, 
  3.814182215867734*^9}},ExpressionUUID->"3d09c5ea-752d-4c4f-a012-\
64278d04bc23"],

Cell["Load the package for simulation.", "Text",
 CellChangeTimes->{{3.82630153978553*^9, 
  3.8263015442082767`*^9}},ExpressionUUID->"001e4823-fdd1-4035-a269-\
fdf403504035"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.814185109958004*^9, 3.8141851225642567`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"0a04ed06-d6bb-43e6-892c-f3f5e8e970d5"],

Cell[BoxData[
 RowBox[{"<<", "DCM`"}]], "Input",
 CellChangeTimes->{{3.814185109958004*^9, 3.8141851225642567`*^9}, {
  3.826295595800872*^9, 3.826295597772654*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"a8d4243b-adb4-4e4d-8956-39ee4ea7c9e5"],

Cell["File name of the simulation result data", "Text",
 CellChangeTimes->{{3.8262936971828938`*^9, 
  3.8262937041908207`*^9}},ExpressionUUID->"c015a181-08ea-4efb-8727-\
2d1edc49f4bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"datafile", "=", "\"\<max-stationary-data.wl\>\""}]], "Input",
 CellChangeTimes->{{3.8142001703309813`*^9, 3.814200172978196*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"8ee46fee-7977-40ce-937d-18b8f90424d2"],

Cell[BoxData["\<\"max-stationary-data.wl\"\>"], "Output",
 CellChangeTimes->{
  3.814200679337894*^9, 3.81424586420621*^9, {3.814246199508111*^9, 
   3.8142462208674107`*^9}, 3.81425398642001*^9, 3.814254036537327*^9, 
   3.814254128769576*^9, 3.8142541767626762`*^9, 3.814255206456874*^9, 
   3.814255623957479*^9, 3.814266149178896*^9, 3.814266789232298*^9, 
   3.8142675100144176`*^9, 3.814269600558044*^9, 3.8142708419229393`*^9, 
   3.814369332226931*^9, 3.8143696515090923`*^9, 3.8143710776552773`*^9, 
   3.814371161826069*^9, 3.814503519883718*^9, 3.814544853241356*^9, 
   3.814545100999999*^9, 3.8156447723360977`*^9, 3.8262937063778133`*^9, 
   3.826295531764772*^9, {3.826296326105728*^9, 3.826296344118232*^9}, 
   3.8263017432358427`*^9, 3.8263054353506937`*^9, 3.826365359374329*^9, 
   3.82636695334722*^9, 3.826370382079208*^9, 3.826379227484105*^9, {
   3.826381387940702*^9, 3.826381397010726*^9}, 3.826465010633587*^9, 
   3.826467065719718*^9, 3.826544407757072*^9, 3.826726029529078*^9, 
   3.827143416651247*^9, 3.827164183579238*^9, 3.8271687326279907`*^9, 
   3.8273134462538443`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"5694519d-784d-410b-95a1-5f8cffcfd1f9"]
}, Open  ]],

Cell["The range of the size of graphs", "Text",
 CellChangeTimes->{{3.82627997563692*^9, 
  3.8262799829691887`*^9}},ExpressionUUID->"d64872c0-f310-494e-8717-\
bac848cf90bc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nmin", "=", "1000"}], ";", 
  RowBox[{"nmax", "=", 
   RowBox[{
    RowBox[{"10", "^", "4"}], "+", "1000"}]}], ";", 
  RowBox[{"nstep", "=", 
   RowBox[{"2", "*", 
    RowBox[{"10", "^", "3"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.826279245017239*^9, 3.826279253842304*^9}, {
  3.826379092270089*^9, 3.826379117030847*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"c2ba97e5-b6eb-485e-864c-5974b0fc9741"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nlist", "=", 
  RowBox[{"Range", "[", 
   RowBox[{"nmin", ",", "nmax", ",", "nstep"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.82627942299401*^9, 3.826279439073318*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"7a63c740-0a7d-4ca4-bb5d-cac948d6973d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1000", ",", "3000", ",", "5000", ",", "7000", ",", "9000", ",", "11000"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.826279439405776*^9, 3.826280008170136*^9, 3.826290512124632*^9, 
   3.826295531746148*^9, {3.8262963260867033`*^9, 3.826296344099761*^9}, 
   3.826305438970683*^9, 3.826365359688209*^9, 3.826366953625319*^9, 
   3.826370382402567*^9, 3.8263791200610867`*^9, 3.8263792277597923`*^9, 
   3.826381397045485*^9, 3.826465011662051*^9, 3.826467065986614*^9, 
   3.826544407795727*^9, 3.8267260295599203`*^9, 3.827143416696189*^9, 
   3.827164183617866*^9, 3.827168732709177*^9, 3.827313446302703*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"7aef2ca4-12b8-446a-b15a-9f342372df45"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"a0", "=", 
   RowBox[{"5", "/", "2"}]}], ";", 
  RowBox[{"r0", "=", "2"}], ";"}]], "Input",
 CellChangeTimes->{{3.8262742218861427`*^9, 3.8262742274627037`*^9}, {
   3.826274462273374*^9, 3.826274464413982*^9}, 3.8262745149111853`*^9, {
   3.826278450686553*^9, 3.826278467450889*^9}, 3.826279901640018*^9, {
   3.8262905057316427`*^9, 3.826290506050556*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"792cdd12-7100-4ff6-9dbc-013f752cb89d"],

Cell["Where to cut-off max degree.", "Text",
 CellChangeTimes->{{3.826466697133959*^9, 
  3.8264667056377583`*^9}},ExpressionUUID->"1eaa547c-6569-4449-a695-\
7940d9a4b742"],

Cell[BoxData[
 RowBox[{
  RowBox[{"p0", "=", 
   RowBox[{"1", "/", "2"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8262802450355473`*^9, 3.8262802472320127`*^9}, {
   3.826299937455608*^9, 3.826299937605792*^9}, {3.826370336675185*^9, 
   3.8263703395553617`*^9}, 3.8263785808722773`*^9, {3.826378633063545*^9, 
   3.826378634925374*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"e071a4cf-2ea1-4085-b30b-cb4ff9c0157d"],

Cell["Teleporting probability", "Text",
 CellChangeTimes->{{3.826466708887512*^9, 
  3.826466714028284*^9}},ExpressionUUID->"9cb9ab1f-be38-4da0-adb5-\
d8b78ff85698"],

Cell[BoxData[
 RowBox[{
  RowBox[{"a1", "=", 
   RowBox[{"1", "/", "4"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.826451795315414*^9, 3.826451797068747*^9}, 
   3.826466718783373*^9, {3.826726003123623*^9, 3.826726003351225*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"2e557ac2-7b49-4247-be2d-c0c43a10c4be"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Degree sequences", "Chapter",
 CellChangeTimes->{{3.82627748390874*^9, 3.826277484710238*^9}, {
  3.826279848470948*^9, 
  3.826279861036277*^9}},ExpressionUUID->"4cd045fb-094e-4f4f-980f-\
bbcb0fd009ee"],

Cell[CellGroupData[{

Cell["The limit distribution of in-degrees", "Section",
 CellChangeTimes->{{3.826279888469469*^9, 
  3.826279897441481*^9}},ExpressionUUID->"19becd8e-f7ae-4d6a-85aa-\
08cddec827ce"],

Cell[TextData[{
 "We will simulate DCM with out-degree fixed to be ",
 Cell[BoxData[
  FormBox["r0", TraditionalForm]],ExpressionUUID->
  "891b1a21-8660-44ed-8566-758b6e305367"],
 " and in-degree with limit distribution"
}], "Text",
 CellChangeTimes->{{3.826280014459054*^9, 3.826280038680295*^9}, {
  3.826280082287345*^9, 
  3.826280085218904*^9}},ExpressionUUID->"602257ec-2f08-4d92-8f08-\
705c733b03a9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dist", "=", 
  RowBox[{"heavyTailDist", "[", 
   RowBox[{"a0", ",", "r0"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.826274156022547*^9, 3.8262741774225893`*^9}, {
   3.826274210619326*^9, 3.8262742337442827`*^9}, {3.826278454343048*^9, 
   3.826278455080285*^9}, 3.826278596052751*^9, 3.826279905626967*^9, {
   3.8262955697075853`*^9, 3.826295573411084*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"b1180962-9554-4c9e-9e0b-fafe17ab9ca3"],

Cell[BoxData[
 RowBox[{"ProbabilityDistribution", "[", 
  RowBox[{
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          FractionBox["2", 
           RowBox[{
            SuperscriptBox["\[FormalX]", 
             RowBox[{"7", "/", "2"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"Zeta", "[", 
               FractionBox["5", "2"], "]"}]}], ")"}]}]], 
          RowBox[{"\[FormalX]", "\[GreaterEqual]", "2"}]},
         {
          FractionBox[
           RowBox[{"1", "+", 
            RowBox[{"Zeta", "[", 
             FractionBox["5", "2"], "]"}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"Zeta", "[", 
              FractionBox["7", "2"], "]"}]}]}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"Zeta", "[", 
             FractionBox["5", "2"], "]"}]}]], 
          RowBox[{"\[FormalX]", "\[Equal]", "0"}]},
         {"0", 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}},
        Selectable->True]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False,
    StripWrapperBoxes->True], ",", 
   RowBox[{"{", 
    RowBox[{"\[FormalX]", ",", "0", ",", "\[Infinity]", ",", "1"}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.826274216699535*^9, 3.8262742342079906`*^9}, 
   3.826274330683714*^9, 3.8262744338157263`*^9, 3.8262745178522463`*^9, {
   3.826278470792635*^9, 3.826278493062693*^9}, {3.826278592727831*^9, 
   3.826278612968011*^9}, 3.82627864544847*^9, 3.826279921013636*^9, 
   3.826280054084169*^9, 3.826280086976646*^9, 3.826280289828458*^9, 
   3.8262905122420692`*^9, 3.8262937880388203`*^9, {3.826295535896667*^9, 
   3.8262955501943197`*^9}, 3.8262963481473627`*^9, 3.826301599831089*^9, 
   3.826365361796609*^9, 3.826366954034688*^9, 3.8263703827081137`*^9, 
   3.8263791367151613`*^9, 3.826379228171376*^9, 3.826467067057431*^9, 
   3.826726029859301*^9, 3.827164192777516*^9, 3.827168737445146*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"5d34a70f-b8c8-4a5c-af6c-d75a870935cd"]
}, Open  ]],

Cell["The PDF of this distribution", "Text",
 CellChangeTimes->{{3.8262800883260603`*^9, 
  3.8262800941830273`*^9}},ExpressionUUID->"9df4be3d-c4a6-4dcb-a056-\
90d97d077e72"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"pdf", "[", "i_", "]"}], "=", 
  RowBox[{"PDF", "[", 
   RowBox[{"dist", ",", "i"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8262742394391203`*^9, 3.826274247288331*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"1e01f5ef-9f74-4510-a6bd-4fa014cf73f1"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox["2", 
         RowBox[{
          SuperscriptBox["i", 
           RowBox[{"7", "/", "2"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"Zeta", "[", 
             FractionBox["5", "2"], "]"}]}], ")"}]}]], 
        RowBox[{"i", "\[GreaterEqual]", "2"}]},
       {
        FractionBox[
         RowBox[{"1", "+", 
          RowBox[{"Zeta", "[", 
           FractionBox["5", "2"], "]"}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"Zeta", "[", 
            FractionBox["7", "2"], "]"}]}]}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"Zeta", "[", 
           FractionBox["5", "2"], "]"}]}]], 
        RowBox[{"i", "\[Equal]", "0"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{{3.826274247605859*^9, 3.826274266940399*^9}, 
   3.826274330705186*^9, 3.8262744338335*^9, 3.826274517873077*^9, {
   3.826278470819377*^9, 3.826278493087544*^9}, {3.826278588148602*^9, 
   3.8262786129905853`*^9}, 3.826278645474184*^9, 3.826279922186122*^9, 
   3.826280055392981*^9, 3.826280289849497*^9, 3.826290512261663*^9, 
   3.826293788061758*^9, 3.826295535919196*^9, 3.826296348166951*^9, 
   3.8263015998520317`*^9, 3.82636536228862*^9, 3.826366954186307*^9, 
   3.826370382852346*^9, 3.826379136858972*^9, 3.826379228335369*^9, 
   3.826467067448679*^9, 3.826726029876729*^9, 3.8271641928663282`*^9, 
   3.82716873755297*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"290eeb70-80f0-472a-aa58-71a0172a204d"]
}, Open  ]],

Cell["Moments", "Text",
 CellChangeTimes->{{3.8262906071367807`*^9, 3.826290614226502*^9}, {
  3.826290660904011*^9, 
  3.8262906624095707`*^9}},ExpressionUUID->"cc683ca3-b6ea-4afb-93bb-\
1401172aaa64"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Moment", "[", 
  RowBox[{"dist", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.826290617676359*^9, 3.826290619882659*^9}, {
  3.82629065229387*^9, 3.826290654390564*^9}, {3.826290690339738*^9, 
  3.8262906929973793`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"6638173a-8198-4d4c-8b8f-74d39fcb79c1"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.826290654768087*^9, 3.8262906933925247`*^9, 
  3.8262937881537647`*^9, 3.826295536152006*^9, 3.8262963482583857`*^9, 
  3.8263015999442673`*^9, 3.826365362483141*^9, 3.826366954808765*^9, 
  3.826370383472031*^9, 3.8263791371428137`*^9, 3.826379228917058*^9, 
  3.826467067662052*^9, 3.826726029955862*^9, 3.827164192949869*^9, 
  3.827168737637148*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"54816438-40b5-4c40-82ba-66a7882737ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Moment", "[", 
   RowBox[{"dist", ",", "2"}], "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.8262906665616093`*^9, 3.8262906829851093`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"d9e5c53d-1902-46c2-b7a1-7f469c76bb12"],

Cell[BoxData["9.443253383248502`"], "Output",
 CellChangeTimes->{{3.826290673948681*^9, 3.826290683635405*^9}, 
   3.8262937882478333`*^9, 3.826295536178978*^9, 3.826296348354714*^9, 
   3.8263016000390177`*^9, 3.8263653627983913`*^9, 3.8263669550074778`*^9, 
   3.8263703836708937`*^9, 3.826379137413497*^9, 3.826379229131689*^9, 
   3.826467067898649*^9, 3.826726030037842*^9, 3.827164193033794*^9, 
   3.827168737726049*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"1b8c0c4d-7071-400e-a118-af1bcdbfd2a5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The actual bi-degree sequence", "Section",
 CellChangeTimes->{{3.8262799368902607`*^9, 3.826279947608088*^9}, {
  3.8262800502962217`*^9, 
  3.826280050648877*^9}},ExpressionUUID->"99b3cbcf-d971-4344-866d-\
da4a790de1d7"],

Cell[TextData[{
 "Since ",
 Cell[BoxData[
  FormBox["dist", TraditionalForm]],ExpressionUUID->
  "5623f221-76ea-4383-8dd2-346d1c1a48e7"],
 " is only a limit, we have create degree sequence which are approximately \
distributed like it for the simulation. "
}], "Text",
 CellChangeTimes->{{3.826280103237918*^9, 
  3.8262802289406443`*^9}},ExpressionUUID->"22635e6a-b5c1-4318-bcd0-\
62d679df5ca1"],

Cell[TextData[{
 "And we have to decide the max degree for each ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "9f94070d-ff01-4ae3-a16e-c16e98f44aca"],
 ". The parameter ",
 Cell[BoxData[
  FormBox["p0", TraditionalForm]],ExpressionUUID->
  "88a706bb-ccc5-4c3a-a546-c9a4f8fc7e25"],
 " controls where to cutoff."
}], "Text",
 CellChangeTimes->{{3.826280103237918*^9, 
  3.826280236857292*^9}},ExpressionUUID->"984f897a-9b53-43bf-b8d8-\
e0c9a45ce6d5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"deglistlist", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"pdf2Deg", "[", 
      RowBox[{"pdf", ",", "r0", ",", "nn", ",", "p0"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"nn", ",", "nmin", ",", "nmax", ",", "nstep"}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.826277257588036*^9, 3.826277314660754*^9}, {
   3.82627886653162*^9, 3.8262788717521973`*^9}, {3.826278921256055*^9, 
   3.826278947434868*^9}, {3.826279008158663*^9, 3.826279008358613*^9}, {
   3.826279041003456*^9, 3.826279041306054*^9}, {3.826279081613975*^9, 
   3.826279099596424*^9}, {3.826279173553273*^9, 3.826279173975254*^9}, {
   3.82627920764054*^9, 3.826279208616088*^9}, {3.826279261658596*^9, 
   3.826279267685685*^9}, 3.8262801790113907`*^9, {3.826280255010213*^9, 
   3.826280255313715*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"5983cd09-0daf-4f3f-b5af-30ab40287693"],

Cell["We draw some pictures of the in-degrees", "Text",
 CellChangeTimes->{{3.826280258532632*^9, 
  3.826280269341612*^9}},ExpressionUUID->"ce8f2ca1-e5eb-486d-a5c5-\
115d1c26ad27"],

Cell[BoxData[
 RowBox[{
  RowBox[{"histlist", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Histogram", "[", 
       RowBox[{
        RowBox[{"#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "10", ",", "1"}], "}"}], ",", 
        "\"\<Probability\>\"", ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], "&"}], ")"}], "/@",
     "deglistlist"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8262773244734907`*^9, 3.826277346052699*^9}, 
   3.826277431467764*^9, {3.826277882785221*^9, 3.826277894543565*^9}, 
   3.8262780034726143`*^9, {3.826279127910342*^9, 3.826279129301694*^9}, {
   3.8262803010341187`*^9, 3.826280302320011*^9}, {3.8262905273014793`*^9, 
   3.8262905295204277`*^9}, {3.826290719881912*^9, 3.826290722267447*^9}, {
   3.82629995188107*^9, 3.8263000154327374`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"a0ee2a23-de05-4a8d-acd7-812c0e68b2dd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"DiscretePlot", "[", 
    RowBox[{
     RowBox[{"pdf", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "10", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8262760207339067`*^9, 3.8262760388797903`*^9}, {
   3.826276076449768*^9, 3.826276080005218*^9}, {3.826276571148809*^9, 
   3.826276582902809*^9}, 3.8262774432252607`*^9, {3.826277924703244*^9, 
   3.826277929824478*^9}, {3.826277973719589*^9, 3.826277975937204*^9}, {
   3.826278846511682*^9, 3.826278849045876*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"1c87ddf6-b093-4d08-b0ba-0cfc8eb4a86b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{"#", ",", "p2"}], "]"}], "&"}], "/@", "histlist"}]], "Input",
 CellChangeTimes->{{3.8262774445723467`*^9, 3.826277451203162*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"261e002e-cdc8-4d9a-9eae-135753d9c438"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.616], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.616], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{0., 0}, {1., 0.24294354838709678`}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{22.961241720649248`, 56.403813960259114`}, {
              1.8958243449919792`, 94.15909090909092}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.24294354838709678`]& ,
           TagBoxNote->"0.24294354838709678"],
          StyleBox["0.24294354838709678`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.24294354838709678`, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{1., 0}, {2., 0.01310483870967742}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{55.903813960259114`, 89.34638619986899}, {
              88.70920516082002, 94.15909090909092}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.01310483870967742]& ,
           TagBoxNote->"0.01310483870967742"],
          StyleBox["0.01310483870967742`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.01310483870967742, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{2., 0}, {3., 0.5221774193548387}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{88.84638619986899, 
              122.28895843947885`}, {-103.57481813739561`, 
              94.15909090909092}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.5221774193548387]& ,
           TagBoxNote->"0.5221774193548387"],
          StyleBox["0.5221774193548387`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.5221774193548387, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{3., 0}, {4., 0.12701612903225806`}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{121.78895843947885`, 155.2315306790887}, {
              45.68327519508069, 94.15909090909092}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.12701612903225806`]& ,
           TagBoxNote->"0.12701612903225806"],
          StyleBox["0.12701612903225806`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.12701612903225806`, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{4., 0}, {5., 0.046370967741935484`}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{154.7315306790887, 188.17410291869857`}, {
              76.14411056905544, 94.15909090909092}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.046370967741935484`]& ,
           TagBoxNote->"0.046370967741935484"],
          StyleBox["0.046370967741935484`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.046370967741935484`, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{5., 0}, {6., 0.021169354838709676`}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{187.67410291869857`, 221.11667515830845`}, {
              85.66312162342255, 94.15909090909092}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.021169354838709676`]& ,
           TagBoxNote->"0.021169354838709676"],
          StyleBox["0.021169354838709676`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.021169354838709676`, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{6., 0}, {7., 0.012096774193548387`}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{220.61667515830845`, 254.0592473979183}, {
              89.08996560299471, 94.15909090909092}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.012096774193548387`]& ,
           TagBoxNote->"0.012096774193548387"],
          StyleBox["0.012096774193548387`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.012096774193548387`, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{7., 0}, {8., 0.007056451612903226}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{253.5592473979183, 287.0018196375282}, {
              90.99376781386813, 94.15909090909092}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.007056451612903226]& ,
           TagBoxNote->"0.007056451612903226"],
          StyleBox["0.007056451612903226`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.007056451612903226, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{8., 0}, {9., 0.005040322580645161}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{286.5018196375282, 319.94439187713806`}, {
              91.7552886982175, 94.15909090909092}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.005040322580645161]& ,
           TagBoxNote->"0.005040322580645161"],
          StyleBox["0.005040322580645161`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.005040322580645161, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{9., 0}, {10., 0.0030241935483870967`}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{319.44439187713806`, 352.8869641167479}, {
              92.51680958256686, 94.15909090909092}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.0030241935483870967`]& ,
           TagBoxNote->"0.0030241935483870967"],
          StyleBox["0.0030241935483870967`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.0030241935483870967`, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, \
{{
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        TagBox[{
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
           LineBox[{{{1., 0.}, {1., 0}}},
            VertexColors->None]}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
           LineBox[{{{0., 0.25775346150655853`}, {0., 0}}, {{2., 
              0.5176670330827169}, {2., 0}}, {{3., 0.12523655187290025`}, {
              3., 0}}, {{4., 0.045755733686188745`}, {4., 0}}, {{5., 
              0.02095368824477595}, {5., 0}}, {{6., 0.011069451885218575`}, {
              6., 0}}, {{7., 0.006453753196912279}, {7., 0}}, {{8., 
              0.004044273695958726}, {8., 0}}, {{9., 
              0.0026779761828222034`}, {9., 0}}, {{10., 
              0.00185206188109374}, {10., 0}}},
            VertexColors->None]}},
         Annotation[#, "Charting`Private`Tag$4009#1"]& ]}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.012833333333333334`], AbsoluteThickness[1.6], {}, 
         PointBox[{{0., 0.25775346150655853`}, {1., 0.}, {2., 
          0.5176670330827169}, {3., 0.12523655187290025`}, {4., 
          0.045755733686188745`}, {5., 0.02095368824477595}, {6., 
          0.011069451885218575`}, {7., 0.006453753196912279}, {8., 
          0.004044273695958726}, {9., 0.0026779761828222034`}, {10., 
          0.00185206188109374}}], {}},
        Annotation[#, "Charting`Private`Tag$4009#1"]& ]}, {}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{-0.2, 0},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Medium,
    PlotRange->{{0., 10.}, {All, All}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.616], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.616], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{0., 0}, {1., 0.24949562878278414`}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{22.961241720649248`, 
              56.403813960259114`}, {-0.5156584554476922, 94.15909090909092}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.24949562878278414`]& ,
           TagBoxNote->"0.24949562878278414"],
          StyleBox["0.24949562878278414`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.24949562878278414`, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{1., 0}, {2., 0.008406186953597848}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{55.903813960259114`, 89.34638619986899}, {
              90.48608722430188, 94.15909090909092}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.008406186953597848]& ,
           TagBoxNote->"0.008406186953597848"],
          StyleBox["0.008406186953597848`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.008406186953597848, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{2., 0}, {3., 0.5225285810356423}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{88.84638619986899, 
              122.28895843947885`}, {-103.57481813739561`, 
              94.15909090909092}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.5225285810356423]& ,
           TagBoxNote->"0.5225285810356423"],
          StyleBox["0.5225285810356423`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.5225285810356423, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{3., 0}, {4., 0.12642905178211164`}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{121.78895843947885`, 155.2315306790887}, {
              45.93711548986381, 94.15909090909092}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.12642905178211164`]& ,
           TagBoxNote->"0.12642905178211164"],
          StyleBox["0.12642905178211164`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.12642905178211164`, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{4., 0}, {5., 0.04640215198386012}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{154.7315306790887, 188.17410291869857`}, {
              76.14411056905544, 94.15909090909092}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.04640215198386012]& ,
           TagBoxNote->"0.04640215198386012"],
          StyleBox["0.04640215198386012`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.04640215198386012, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{5., 0}, {6., 0.021183591123066576`}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{187.67410291869857`, 221.11667515830845`}, {
              85.66312162342255, 94.15909090909092}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.021183591123066576`]& ,
           TagBoxNote->"0.021183591123066576"],
          StyleBox["0.021183591123066576`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.021183591123066576`, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{6., 0}, {7., 0.011432414256893073`}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{220.61667515830845`, 254.0592473979183}, {
              89.34380589777783, 94.15909090909092}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.011432414256893073`]& ,
           TagBoxNote->"0.011432414256893073"],
          StyleBox["0.011432414256893073`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.011432414256893073`, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{7., 0}, {8., 0.006724949562878279}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{253.5592473979183, 287.0018196375282}, {
              91.12068796125969, 94.15909090909092}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.006724949562878279]& ,
           TagBoxNote->"0.006724949562878279"],
          StyleBox["0.006724949562878279`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.006724949562878279, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{8., 0}, {9., 0.004371217215870881}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{286.5018196375282, 319.94439187713806`}, {
              92.00912899300062, 94.15909090909092}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.004371217215870881]& ,
           TagBoxNote->"0.004371217215870881"],
          StyleBox["0.004371217215870881`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.004371217215870881, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{9., 0}, {10., 0.003026227303295225}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{319.44439187713806`, 352.8869641167479}, {
              92.51680958256686, 94.15909090909092}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.003026227303295225]& ,
           TagBoxNote->"0.003026227303295225"],
          StyleBox["0.003026227303295225`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.003026227303295225, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, \
{{
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        TagBox[{
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
           LineBox[{{{1., 0.}, {1., 0}}},
            VertexColors->None]}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
           LineBox[{{{0., 0.25775346150655853`}, {0., 0}}, {{2., 
              0.5176670330827169}, {2., 0}}, {{3., 0.12523655187290025`}, {
              3., 0}}, {{4., 0.045755733686188745`}, {4., 0}}, {{5., 
              0.02095368824477595}, {5., 0}}, {{6., 0.011069451885218575`}, {
              6., 0}}, {{7., 0.006453753196912279}, {7., 0}}, {{8., 
              0.004044273695958726}, {8., 0}}, {{9., 
              0.0026779761828222034`}, {9., 0}}, {{10., 
              0.00185206188109374}, {10., 0}}},
            VertexColors->None]}},
         Annotation[#, "Charting`Private`Tag$4009#1"]& ]}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.012833333333333334`], AbsoluteThickness[1.6], {}, 
         PointBox[{{0., 0.25775346150655853`}, {1., 0.}, {2., 
          0.5176670330827169}, {3., 0.12523655187290025`}, {4., 
          0.045755733686188745`}, {5., 0.02095368824477595}, {6., 
          0.011069451885218575`}, {7., 0.006453753196912279}, {8., 
          0.004044273695958726}, {9., 0.0026779761828222034`}, {10., 
          0.00185206188109374}}], {}},
        Annotation[#, "Charting`Private`Tag$4009#1"]& ]}, {}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{-0.2, 0},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Medium,
    PlotRange->{{0., 10.}, {All, All}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.616], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.616], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{0., 0}, {1., 0.25221953188054885`}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{22.961241720649248`, 
              56.403813960259114`}, {-1.5677867688187916`, 94.1590909090909}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.25221953188054885`]& ,
           TagBoxNote->"0.25221953188054885"],
          StyleBox["0.25221953188054885`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.25221953188054885`, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{1., 0}, {2., 0.00645682001614205}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{55.903813960259114`, 89.34638619986899}, {
              91.22128284053642, 94.1590909090909}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.00645682001614205]& ,
           TagBoxNote->"0.00645682001614205"],
          StyleBox["0.00645682001614205`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.00645682001614205, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{2., 0}, {3., 0.5223970944309927}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{88.84638619986899, 
              122.28895843947885`}, {-103.57481813739565`, 94.1590909090909}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.5223970944309927]& ,
           TagBoxNote->"0.5223970944309927"],
          StyleBox["0.5223970944309927`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.5223970944309927, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{3., 0}, {4., 0.12651331719128328`}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{121.78895843947885`, 155.2315306790887}, {
              45.893289065851405`, 94.1590909090909}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.12651331719128328`]& ,
           TagBoxNote->"0.12651331719128328"],
          StyleBox["0.12651331719128328`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.12651331719128328`, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{4., 0}, {5., 0.04620661824051655}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{154.7315306790887, 188.17410291869857`}, {
              76.21352691849785, 94.1590909090909}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.04620661824051655]& ,
           TagBoxNote->"0.04620661824051655"],
          StyleBox["0.04620661824051655`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.04620661824051655, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{5., 0}, {6., 0.0211864406779661}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{187.67410291869857`, 221.11667515830845`}, {
              85.6600331841465, 94.1590909090909}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.0211864406779661]& ,
           TagBoxNote->"0.0211864406779661"],
          StyleBox["0.0211864406779661`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.0211864406779661, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{6., 0}, {7., 0.011299435028248588`}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{220.61667515830845`, 254.0592473979183}, {
              89.39292678912055, 94.1590909090909}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.011299435028248588`]& ,
           TagBoxNote->"0.011299435028248588"],
          StyleBox["0.011299435028248588`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.011299435028248588`, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{7., 0}, {8., 0.006658595641646489}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{253.5592473979183, 287.0018196375282}, {
              91.14510133839408, 94.1590909090909}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.006658595641646489]& ,
           TagBoxNote->"0.006658595641646489"],
          StyleBox["0.006658595641646489`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.006658595641646489, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{8., 0}, {9., 0.00423728813559322}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{286.5018196375282, 319.94439187713806`}, {
              92.05927936410203, 94.1590909090909}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.00423728813559322]& ,
           TagBoxNote->"0.00423728813559322"],
          StyleBox["0.00423728813559322`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.00423728813559322, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{9., 0}, {10., 0.002824858757062147}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{319.44439187713806`, 352.8869641167479}, {
              92.59254987909831, 94.1590909090909}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.002824858757062147]& ,
           TagBoxNote->"0.002824858757062147"],
          StyleBox["0.002824858757062147`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.002824858757062147, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, \
{{
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        TagBox[{
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
           LineBox[{{{1., 0.}, {1., 0}}},
            VertexColors->None]}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
           LineBox[{{{0., 0.25775346150655853`}, {0., 0}}, {{2., 
              0.5176670330827169}, {2., 0}}, {{3., 0.12523655187290025`}, {
              3., 0}}, {{4., 0.045755733686188745`}, {4., 0}}, {{5., 
              0.02095368824477595}, {5., 0}}, {{6., 0.011069451885218575`}, {
              6., 0}}, {{7., 0.006453753196912279}, {7., 0}}, {{8., 
              0.004044273695958726}, {8., 0}}, {{9., 
              0.0026779761828222034`}, {9., 0}}, {{10., 
              0.00185206188109374}, {10., 0}}},
            VertexColors->None]}},
         Annotation[#, "Charting`Private`Tag$4009#1"]& ]}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.012833333333333334`], AbsoluteThickness[1.6], {}, 
         PointBox[{{0., 0.25775346150655853`}, {1., 0.}, {2., 
          0.5176670330827169}, {3., 0.12523655187290025`}, {4., 
          0.045755733686188745`}, {5., 0.02095368824477595}, {6., 
          0.011069451885218575`}, {7., 0.006453753196912279}, {8., 
          0.004044273695958726}, {9., 0.0026779761828222034`}, {10., 
          0.00185206188109374}}], {}},
        Annotation[#, "Charting`Private`Tag$4009#1"]& ]}, {}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{-0.2, 0},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Medium,
    PlotRange->{{0., 10.}, {All, All}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.616], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.616], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {1., 0.253675410781205}, "RoundingRadius" -> 
               0]},
             
             ImageSizeCache->{{22.961241720649248`, 
              56.403813960259114`}, {-2.127796486553791, 94.1590909090909}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.253675410781205]& ,
           TagBoxNote->"0.253675410781205"],
          StyleBox["0.253675410781205`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.253675410781205, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{1., 0}, {2., 0.0053329489766503315`}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{55.903813960259114`, 89.34638619986899}, {
              91.64538929906882, 94.1590909090909}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.0053329489766503315`]& ,
           TagBoxNote->"0.0053329489766503315"],
          StyleBox["0.0053329489766503315`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.0053329489766503315`, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{2., 0}, {3., 0.5223407321994811}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{88.84638619986899, 
              122.28895843947885`}, {-103.57481813739562`, 94.1590909090909}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.5223407321994811]& ,
           TagBoxNote->"0.5223407321994811"],
          StyleBox["0.5223407321994811`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.5223407321994811, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{3., 0}, {4., 0.12640530412222542`}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{121.78895843947885`, 155.2315306790887}, {
              45.92892031478387, 94.1590909090909}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.12640530412222542`]& ,
           TagBoxNote->"0.12640530412222542"],
          StyleBox["0.12640530412222542`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.12640530412222542`, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{4., 0}, {5., 0.04626693571634477}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{154.7315306790887, 188.17410291869857`}, {
              76.18886883295343, 94.1590909090909}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.04626693571634477]& ,
           TagBoxNote->"0.04626693571634477"],
          StyleBox["0.04626693571634477`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.04626693571634477, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{5., 0}, {6., 0.021187662150475642`}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{187.67410291869857`, 221.11667515830845`}, {
              85.65870883684104, 94.1590909090909}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.021187662150475642`]& ,
           TagBoxNote->"0.021187662150475642"],
          StyleBox["0.021187662150475642`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.021187662150475642`, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{6., 0}, {7., 0.011242432977803401`}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{220.61667515830845`, 254.0592473979183}, {
              89.41399021769301, 94.1590909090909}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.011242432977803401`]& ,
           TagBoxNote->"0.011242432977803401"],
          StyleBox["0.011242432977803401`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.011242432977803401`, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{7., 0}, {8., 0.006630152781781493}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{253.5592473979183, 287.0018196375282}, {
              91.15556998852293, 94.1590909090909}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.006630152781781493]& ,
           TagBoxNote->"0.006630152781781493"],
          StyleBox["0.006630152781781493`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.006630152781781493, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{8., 0}, {9., 0.004179878927644855}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{286.5018196375282, 319.94439187713806`}, {
              92.0807842417763, 94.1590909090909}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.004179878927644855]& ,
           TagBoxNote->"0.004179878927644855"],
          StyleBox["0.004179878927644855`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.004179878927644855, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{9., 0}, {10., 0.002738541366388008}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{319.44439187713806`, 352.8869641167479}, {
              92.62502792016065, 94.1590909090909}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.002738541366388008]& ,
           TagBoxNote->"0.002738541366388008"],
          StyleBox["0.002738541366388008`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.002738541366388008, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, \
{{
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        TagBox[{
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
           LineBox[{{{1., 0.}, {1., 0}}},
            VertexColors->None]}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
           LineBox[{{{0., 0.25775346150655853`}, {0., 0}}, {{2., 
              0.5176670330827169}, {2., 0}}, {{3., 0.12523655187290025`}, {
              3., 0}}, {{4., 0.045755733686188745`}, {4., 0}}, {{5., 
              0.02095368824477595}, {5., 0}}, {{6., 0.011069451885218575`}, {
              6., 0}}, {{7., 0.006453753196912279}, {7., 0}}, {{8., 
              0.004044273695958726}, {8., 0}}, {{9., 
              0.0026779761828222034`}, {9., 0}}, {{10., 
              0.00185206188109374}, {10., 0}}},
            VertexColors->None]}},
         Annotation[#, "Charting`Private`Tag$4009#1"]& ]}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.012833333333333334`], AbsoluteThickness[1.6], {}, 
         PointBox[{{0., 0.25775346150655853`}, {1., 0.}, {2., 
          0.5176670330827169}, {3., 0.12523655187290025`}, {4., 
          0.045755733686188745`}, {5., 0.02095368824477595}, {6., 
          0.011069451885218575`}, {7., 0.006453753196912279}, {8., 
          0.004044273695958726}, {9., 0.0026779761828222034`}, {10., 
          0.00185206188109374}}], {}},
        Annotation[#, "Charting`Private`Tag$4009#1"]& ]}, {}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{-0.2, 0},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Medium,
    PlotRange->{{0., 10.}, {All, All}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.616], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.616], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{0., 0}, {1., 0.256390134529148}, "RoundingRadius" -> 
               0]},
             
             ImageSizeCache->{{22.961241720649248`, 
              56.403813960259114`}, {-3.1378940671568643`, 
              94.15909090909092}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.256390134529148]& ,
           TagBoxNote->"0.256390134529148"],
          StyleBox["0.256390134529148`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.256390134529148, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1., 0}, {2., 0.00257847533632287}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{55.903813960259114`, 89.34638619986899}, {
              92.68561882581427, 94.15909090909092}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.00257847533632287]& ,
           TagBoxNote->"0.00257847533632287"],
          StyleBox["0.00257847533632287`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.00257847533632287, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{2., 0}, {3., 0.5224215246636771}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{88.84638619986899, 
              122.28895843947885`}, {-103.57481813739558`, 
              94.15909090909092}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.5224215246636771]& ,
           TagBoxNote->"0.5224215246636771"],
          StyleBox["0.5224215246636771`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.5224215246636771, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{3., 0}, {4., 0.12645739910313902`}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{121.78895843947885`, 155.2315306790887}, {
              45.91663395534912, 94.15909090909092}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.12645739910313902`]& ,
           TagBoxNote->"0.12645739910313902"],
          StyleBox["0.12645739910313902`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.12645739910313902`, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{4., 0}, {5., 0.04618834080717489}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{154.7315306790887, 188.17410291869857`}, {
              76.2212431564831, 94.15909090909092}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.04618834080717489]& ,
           TagBoxNote->"0.04618834080717489"],
          StyleBox["0.04618834080717489`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.04618834080717489, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{5., 0}, {6., 0.02118834080717489}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{187.67410291869857`, 221.11667515830845`}, {
              85.65968987694801, 94.15909090909092}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.02118834080717489]& ,
           TagBoxNote->"0.02118834080717489"],
          StyleBox["0.02118834080717489`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.02118834080717489, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{6., 0}, {7., 0.011210762331838564`}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{220.61667515830845`, 254.0592473979183}, {
              89.4266035904968, 94.15909090909092}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.011210762331838564`]& ,
           TagBoxNote->"0.011210762331838564"],
          StyleBox["0.011210762331838564`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.011210762331838564`, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{7., 0}, {8., 0.0066143497757847535`}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{253.5592473979183, 287.0018196375282}, {
              91.16192339112038, 94.15909090909092}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.0066143497757847535`]& ,
           TagBoxNote->"0.0066143497757847535"],
          StyleBox["0.0066143497757847535`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.0066143497757847535`, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{8., 0}, {9., 0.004147982062780269}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{286.5018196375282, 319.94439187713806`}, {
              92.0930706012111, 94.15909090909092}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.004147982062780269]& ,
           TagBoxNote->"0.004147982062780269"],
          StyleBox["0.004147982062780269`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.004147982062780269, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{9., 0}, {10., 0.002802690582959641}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{319.44439187713806`, 352.8869641167479}, {
              92.6009690794424, 94.15909090909092}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.002802690582959641]& ,
           TagBoxNote->"0.002802690582959641"],
          StyleBox["0.002802690582959641`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.002802690582959641, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, \
{{
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        TagBox[{
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
           LineBox[{{{1., 0.}, {1., 0}}},
            VertexColors->None]}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
           LineBox[{{{0., 0.25775346150655853`}, {0., 0}}, {{2., 
              0.5176670330827169}, {2., 0}}, {{3., 0.12523655187290025`}, {
              3., 0}}, {{4., 0.045755733686188745`}, {4., 0}}, {{5., 
              0.02095368824477595}, {5., 0}}, {{6., 0.011069451885218575`}, {
              6., 0}}, {{7., 0.006453753196912279}, {7., 0}}, {{8., 
              0.004044273695958726}, {8., 0}}, {{9., 
              0.0026779761828222034`}, {9., 0}}, {{10., 
              0.00185206188109374}, {10., 0}}},
            VertexColors->None]}},
         Annotation[#, "Charting`Private`Tag$4009#1"]& ]}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.012833333333333334`], AbsoluteThickness[1.6], {}, 
         PointBox[{{0., 0.25775346150655853`}, {1., 0.}, {2., 
          0.5176670330827169}, {3., 0.12523655187290025`}, {4., 
          0.045755733686188745`}, {5., 0.02095368824477595}, {6., 
          0.011069451885218575`}, {7., 0.006453753196912279}, {8., 
          0.004044273695958726}, {9., 0.0026779761828222034`}, {10., 
          0.00185206188109374}}], {}},
        Annotation[#, "Charting`Private`Tag$4009#1"]& ]}, {}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{-0.2, 0},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Medium,
    PlotRange->{{0., 10.}, {All, All}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.616], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.616], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{0., 0}, {1., 0.2524761555392516}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{22.96124172064925, 
              56.403813960259114`}, {-1.6850621383151179`, 
              94.15909090909093}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.2524761555392516]& ,
           TagBoxNote->"0.2524761555392516"],
          StyleBox["0.2524761555392516`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.2524761555392516, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{1., 0}, {2., 0.006878209831254586}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{55.903813960259114`, 89.34638619986899}, {
              91.06162942033123, 94.15909090909093}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.006878209831254586]& ,
           TagBoxNote->"0.006878209831254586"],
          StyleBox["0.006878209831254586`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.006878209831254586, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{2., 0}, {3., 0.5222853998532648}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{88.84638619986899, 
              122.28895843947886`}, {-103.57481813739562`, 
              94.15909090909093}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.5222853998532648]& ,
           TagBoxNote->"0.5222853998532648"],
          StyleBox["0.5222853998532648`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.5222853998532648, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{3., 0}, {4., 0.12637564196625092`}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{121.78895843947886`, 155.2315306790887}, {
              45.935065155612705`, 94.15909090909093}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.12637564196625092`]& ,
           TagBoxNote->"0.12637564196625092"],
          StyleBox["0.12637564196625092`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.12637564196625092`, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{4., 0}, {5., 0.046221570066030816`}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{154.7315306790887, 188.17410291869857`}, {
              76.20414970462575, 94.15909090909093}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.046221570066030816`]& ,
           TagBoxNote->"0.046221570066030816"],
          StyleBox["0.046221570066030816`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.046221570066030816`, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{5., 0}, {6., 0.021184886280264124`}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{187.67410291869857`, 221.11667515830845`}, {
              85.65890952371106, 94.15909090909093}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.021184886280264124`]& ,
           TagBoxNote->"0.021184886280264124"],
          StyleBox["0.021184886280264124`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.021184886280264124`, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{6., 0}, {7., 0.011188554658840793`}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{220.61667515830845`, 254.0592473979183}, {
              89.43388688737515, 94.15909090909093}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.011188554658840793`]& ,
           TagBoxNote->"0.011188554658840793"],
          StyleBox["0.011188554658840793`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.011188554658840793`, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{7., 0}, {8., 0.006511371973587674}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{253.5592473979183, 287.0018196375282}, {
              91.20016069973175, 94.15909090909093}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.006511371973587674]& ,
           TagBoxNote->"0.006511371973587674"],
          StyleBox["0.006511371973587674`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.006511371973587674, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{8., 0}, {9., 0.004126925898752751}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{286.5018196375282, 319.94439187713806`}, {
              92.10061401583512, 94.15909090909093}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.004126925898752751]& ,
           TagBoxNote->"0.004126925898752751"],
          StyleBox["0.004126925898752751`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.004126925898752751, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{9., 0}, {10., 0.002751283932501834}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{319.44439187713806`, 352.8869641167479}, {
              92.62010631358706, 94.15909090909093}}],
            "DelayedMouseEffectStyle"],
           StatusArea[#, 0.002751283932501834]& ,
           TagBoxNote->"0.002751283932501834"],
          StyleBox["0.002751283932501834`", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.002751283932501834, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, \
{{
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.012833333333333334`], AbsoluteThickness[1.6], 
        TagBox[{
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
           LineBox[{{{1., 0.}, {1., 0}}},
            VertexColors->None]}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
           LineBox[{{{0., 0.25775346150655853`}, {0., 0}}, {{2., 
              0.5176670330827169}, {2., 0}}, {{3., 0.12523655187290025`}, {
              3., 0}}, {{4., 0.045755733686188745`}, {4., 0}}, {{5., 
              0.02095368824477595}, {5., 0}}, {{6., 0.011069451885218575`}, {
              6., 0}}, {{7., 0.006453753196912279}, {7., 0}}, {{8., 
              0.004044273695958726}, {8., 0}}, {{9., 
              0.0026779761828222034`}, {9., 0}}, {{10., 
              0.00185206188109374}, {10., 0}}},
            VertexColors->None]}},
         Annotation[#, "Charting`Private`Tag$4009#1"]& ]}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.012833333333333334`], AbsoluteThickness[1.6], {}, 
         PointBox[{{0., 0.25775346150655853`}, {1., 0.}, {2., 
          0.5176670330827169}, {3., 0.12523655187290025`}, {4., 
          0.045755733686188745`}, {5., 0.02095368824477595}, {6., 
          0.011069451885218575`}, {7., 0.006453753196912279}, {8., 
          0.004044273695958726}, {9., 0.0026779761828222034`}, {10., 
          0.00185206188109374}}], {}},
        Annotation[#, "Charting`Private`Tag$4009#1"]& ]}, {}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{-0.2, 0},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Medium,
    PlotRange->{{0., 10.}, {All, All}},
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.826277451755595*^9, 3.826277590919195*^9, 3.8262778334005537`*^9, {
   3.826277908259158*^9, 3.826277932300589*^9}, {3.826277978852058*^9, 
   3.826278005864101*^9}, {3.8262781017504187`*^9, 3.826278149762267*^9}, 
   3.826278247281753*^9, 3.826278670380307*^9, {3.826278941692155*^9, 
   3.826278950921471*^9}, {3.826279024882859*^9, 3.826279135787299*^9}, 
   3.826279179252187*^9, 3.826279212936145*^9, {3.826280282012727*^9, 
   3.8262803048287773`*^9}, {3.826290512679563*^9, 3.826290534852378*^9}, 
   3.826290727754775*^9, 3.826293788695904*^9, 3.826295536652933*^9, 
   3.826296349012203*^9, {3.826299965794219*^9, 3.826300019357153*^9}, 
   3.8263016004762573`*^9, 3.826365364899105*^9, 3.826366956303728*^9, 
   3.826370351699368*^9, 3.8263703849187307`*^9, 3.826378587964964*^9, 
   3.826378644034149*^9, 3.826379139377726*^9, 3.826379230127687*^9, 
   3.826467069280781*^9, 3.8267260306971893`*^9, 3.8271641935690527`*^9, 
   3.82716873819596*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"e1fbaef7-78ad-461f-b4a6-63cac2b9a1ea"]
}, Open  ]],

Cell["\<\
As can be seen from the pictures, these degree sequences dos approximates the \
limit distribution.\
\>", "Text",
 CellChangeTimes->{{3.82628031255583*^9, 3.82628035398598*^9}, {
  3.826290751712657*^9, 
  3.826290773348134*^9}},ExpressionUUID->"1ca06b98-47e1-4efa-8323-\
ebab0eed94b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The maximum degrees", "Section",
 CellChangeTimes->{{3.826280358296074*^9, 
  3.826280369099421*^9}},ExpressionUUID->"6e7e25ab-1fc3-4b6a-a255-\
cd38e6c48cf2"],

Cell[TextData[{
 "The max degrees for each ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "73077ae7-b8ed-4ad9-8805-29623ca03c11"],
 " are"
}], "Text",
 CellChangeTimes->{{3.826280395149427*^9, 
  3.82628040200627*^9}},ExpressionUUID->"58c8d84c-7843-4171-9816-\
6971bdc6bd83"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"maxdlist", "=", 
  RowBox[{"deglistlist", "[", 
   RowBox[{"[", 
    RowBox[{";;", ",", "1", ",", 
     RowBox[{"-", "1"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8262792230589952`*^9, 3.8262792382713537`*^9}, {
  3.8262803777884617`*^9, 3.826280377993004*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"a27dcc9d-a324-48f0-85d7-3e27564d7b49"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"15", ",", "20", ",", "24", ",", "26", ",", "28", ",", "29"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.826279238694769*^9, 3.826279273163015*^9, {3.826280371655108*^9, 
   3.8262804039428673`*^9}, 3.8262905127510567`*^9, 3.826290547476006*^9, 
   3.826293788761318*^9, 3.826295536732216*^9, 3.826296349169458*^9, 
   3.826301600541473*^9, 3.826365365214905*^9, 3.826366956708516*^9, 
   3.8263703853290997`*^9, 3.8263786123612967`*^9, 3.8263786584485073`*^9, 
   3.8263791395842*^9, 3.826379230354225*^9, 3.826467069736568*^9, 
   3.82672603073134*^9, 3.827164193608088*^9, 3.82716873825348*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"39bf93e7-700c-4927-9209-4665ebf02e4a"]
}, Open  ]],

Cell["So the max degree grows approximately as", "Text",
 CellChangeTimes->{{3.826280421944352*^9, 
  3.8262804355500193`*^9}},ExpressionUUID->"8c2750ab-d4e8-417b-81d1-\
cb610f0299ee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data1", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"maxdlist", ",", "nlist"}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.826279571703451*^9, 3.8262796071199627`*^9}, 
   3.8262803840917463`*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"76f4b211-7a11-4f17-9ab2-50701a18d26e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fit", "=", 
  RowBox[{"Fit", "[", 
   RowBox[{"data1", ",", 
    RowBox[{"{", 
     SuperscriptBox["n", 
      RowBox[{"a0", "+", "1"}]], "}"}], ",", "n"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8262796098681393`*^9, 3.8262796568196898`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"171acfda-cd23-4b99-90f3-99f7d8c69570"],

Cell[BoxData[
 RowBox[{"0.0798117726950709`", " ", 
  SuperscriptBox["n", 
   RowBox[{"7", "/", "2"}]]}]], "Output",
 CellChangeTimes->{{3.826279646701495*^9, 3.826279657446374*^9}, {
   3.8262803860296783`*^9, 3.826280405490158*^9}, 3.82628043748706*^9, 
   3.826290512782449*^9, 3.826290547528599*^9, 3.826293788787094*^9, 
   3.826295536839128*^9, 3.826296349193881*^9, 3.8263016005679293`*^9, 
   3.82636536583635*^9, 3.826366956952877*^9, 3.8263703856744757`*^9, 
   3.8263786127101917`*^9, 3.826378658792664*^9, 3.826379139971064*^9, 
   3.826379230822154*^9, 3.8264670699788837`*^9, 3.8267260307517138`*^9, 
   3.827164193637457*^9, 3.8271687382863913`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"9bef68f0-cb2d-4dad-bb47-d20d508af59f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", "data1", "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{"fit", ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{
       "maxdlist", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
       ",", 
       RowBox[{"maxdlist", "\[LeftDoubleBracket]", 
        RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Orange"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8262796584044857`*^9, 3.826279733916703*^9}, {
  3.8263703721745567`*^9, 3.826370376503912*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"8607ca61-944a-4493-aba4-47a30a25f408"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{15., 1000.}, {20., 3000.}, {24., 5000.}, {26., 7000.}, {28., 
      9000.}, {29., 11000.}}]}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwVj30w1HkAh7eNXu4mva0G3XKiE7m1y7K2/aaPMpJE0gtT5zWuXGqLiKam
XEWm2rVZzaWjUvYibF7W2+5a7U8pjcpLx0R31XopOpeUt7Wu++OZZ54/H+vI
Q9ui6TQabctX/vcer+z5NBoL68FkTPmJ8fd6YbsznQXdkzCNfaAYUZ6+edFG
LDx73swO2SFGrIeB2zyPBb9TiaG1P4lxzD0mPHsxC1yPI8NnD4qR5ehW5WjD
Qs9G3aSnWIwnjBd7Q7xZcPXW+fu3i0F6TTVlF1hIuJQoU4ZmQtd61V6w0gkl
PWlfGqQSjC5f2C8rd8LcrE7Du8bLEM5TKW5ZsXH4PH1l8HQWfO2PBoX/wsYn
hcF6b2g2OsdsLUzK2HgT7diYobiCxwd21RYY2Ajb2WIxKPgNRTzj+q5NHHQ+
OudAmq8C8sIPBhEHuUU25kEB18B/2vrZpJuD9+fvduUY56IvZ8RusY0zXnRy
DotK85Cqvqgu3ueMbd3dyJNfR2paEcu1whkhOrGZ9e0bcDNomkomnaGsvPvS
RnIT/stDyNKNLmgT7tj58Vo+dlw6wFgicQEebJyyKL6FRaVJy2Z3uiC1kcfz
rrgNp0TjkVc2XLSfNVqworsA9MGMsbuxXCT+GD7hPSkDf87lF9FVXJRv6RhN
EtxBWNIyixq6K8ypXUcCUwvBz85MM/i4wilsSUqdqghJu0UtLKkr2EOv26Ks
irG/5cy6wG5XxDDfZjxMKIHvlc8MkxVu6FbH6OxbSiGa805bGeeGMZ+Dcel/
yJFu034toMINdNPs/r7Ie+jt8wxop/GwKL3AJdKlDBza6phPm3nw2i3mNMwp
B+fhtzIjCQ85k3GbZ56XQ8o91EB7xcMJVWmqY2UFigMeGw/busPjIsNKIapE
heZ6SVKsO/SbbNdbHlDAsnOCPVjpjgIc/z4wsgprf/ft2ap3x83oZLXKvxqa
eZZRN3z4EDUIF5zcWYMx63dLdCI+zGY75/UG1YKZ6WTX0MGHNTtwj1VQHQoK
xhnnrdcgdb7sjfyQErr9NY4b9n3tuCwz2SkVzrbpmQMVa+DAf+uVJ1fD9HJd
vB1NgNqAjsyEt/UIoR35FOwtgP1RxinZGQ1mMYr8jkoE+FkequGsakBox8un
v3YJoL9tsnSAasCdobQqRysC9rJ8y/DI+wguVBzTxBKE0gMipIu1qDPtifK+
R3Cnf9RLUKNFd8Ia39NlBPER5gs5Si30bVfYynICoSTRwa5eCyLZNs1REAxM
D29nNGqhNmnKZtYREHI4eeSZFpq55Y9GKYLr9euM1QNaPJhId8rvJJiZX+An
MaPQF9xn+qqLQN8/y0eynMLc6g16s5cED1rXSiWWFHwSDU2Xegh6NbErs2wp
PBqJj0x5Q9BzazUzh03hyWCoNHCIQGX618FqHwpDvsrjFz4QGPbIM1SbKSwo
NI98+A9B9bnK8fv+FPz3tbPWfiR4nSJsbtlO4aluU9OqLwTpKoHf+3AK/26Q
lUSNEbgPe0x+jKKwKN9Imjv+9W88b3IihsLWiPoIxhQBK1M88k0cBaHmO58A
PcGJXIf3S4UUMq1SWBnTBJ6neVxmPIWyk38yGg0ElsnKZz8kUmjt4U7NzBC0
NKrr2ckU/gMGIT+1
        "]]},
      Annotation[#, "Charting`Private`Tag$4195#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{14.708333333333334`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{14.708333333333334`, 29.}, {0, 11000.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8262796688983507`*^9, {3.826279714968114*^9, 3.826279734243341*^9}, {
   3.826280388458899*^9, 3.826280406273728*^9}, 3.826280438914921*^9, 
   3.826290512838369*^9, 3.826290547584742*^9, 3.826293788836089*^9, 
   3.8262955370627003`*^9, 3.826296349306322*^9, 3.826301600616374*^9, 
   3.826365366263752*^9, 3.826366957149*^9, 3.826370386031465*^9, 
   3.826378612914328*^9, 3.8263786591160603`*^9, 3.826379140186059*^9, 
   3.826379231224105*^9, 3.826467070404923*^9, 3.826726030840766*^9, 
   3.827164193752617*^9, 3.827168738404016*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"3b7c0265-d46c-486f-8722-22e98f835d50"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulation", "Chapter",
 CellChangeTimes->{{3.814182703575581*^9, 
  3.8141827054659433`*^9}},ExpressionUUID->"b29e6f5f-433a-4583-b25d-\
75b5e787974c"],

Cell[TextData[StyleBox["Warning: This part may take very long time to run.",
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{{3.8271687618386297`*^9, 
  3.827168777611084*^9}},ExpressionUUID->"414c557f-6ce6-4d13-b25f-\
bac089a2fb9a"],

Cell["\<\
We will simulate DCM of different sizes and collect data of the maximum \
stationary distribution and the stationary distribution of the node with max \
degree.\
\>", "Text",
 CellChangeTimes->{{3.814182758747582*^9, 3.8141827930532417`*^9}, {
   3.814182823585574*^9, 3.8141828476039257`*^9}, 
   3.8141849948506613`*^9},ExpressionUUID->"db12864e-e869-4e5b-9dcf-\
ebb53f229f9b"],

Cell[TextData[{
 "The number of samples for each ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "d8065bc2-7e63-42a7-a7b3-dbd537a098e8"]
}], "Text",
 CellChangeTimes->{{3.814185067155328*^9, 
  3.8141850723914967`*^9}},ExpressionUUID->"328450d0-1e04-43bb-8ea0-\
b396b9d5bbcb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nsample0", "=", "500"}], ";"}]], "Input",
 CellChangeTimes->{{3.826293644787487*^9, 3.8262936628670483`*^9}, {
  3.8262937186484547`*^9, 3.826293720199253*^9}, {3.8262938471962347`*^9, 
  3.826293848132846*^9}, {3.826296356573806*^9, 3.82629637022838*^9}, {
  3.826296412552055*^9, 3.8262964203716784`*^9}, {3.826365340279141*^9, 
  3.826365341523951*^9}, {3.82636694299545*^9, 3.826366943602314*^9}, {
  3.826378770809538*^9, 3.826378774206521*^9}, {3.826379207573628*^9, 
  3.826379209313838*^9}, {3.826466733016644*^9, 3.826466733611395*^9}, {
  3.8271453666988297`*^9, 
  3.827145367333247*^9}},ExpressionUUID->"833d6c19-ed3f-42a6-9c0b-\
7831268d1c28"],

Cell[BoxData[
 RowBox[{"Clear", "[", "data", "]"}]], "Input",
 CellChangeTimes->{{3.814370008158656*^9, 3.814370010259107*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"5b775332-3904-4685-8744-ed6bfc485fe5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Monitor", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"simDCM", "[", 
        RowBox[{
        "pdf", ",", "r0", ",", "n", ",", "p0", ",", "a1", ",", "nsample0"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "nmin", ",", "nmax", ",", " ", "nstep"}], "}"}]}], 
      "]"}], ",", "n"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.814183438622355*^9, 3.814183447833749*^9}, 
   3.814184239448552*^9, 3.81418496511884*^9, {3.81418501416746*^9, 
   3.814185037628759*^9}, {3.8141850783752604`*^9, 3.8141850825567417`*^9}, {
   3.8141851350957212`*^9, 3.814185153504532*^9}, {3.8141854261295547`*^9, 
   3.8141854495254087`*^9}, {3.814185480808339*^9, 3.814185487640992*^9}, {
   3.8141992040693283`*^9, 3.81419921344177*^9}, {3.814245894964425*^9, 
   3.814245901267539*^9}, {3.814246378488803*^9, 3.814246380451457*^9}, {
   3.826293581323844*^9, 3.826293621206067*^9}, {3.826293807624525*^9, 
   3.8262938443031597`*^9}, {3.826452270702777*^9, 3.826452272342807*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"066796f0-d4dd-4817-a10a-c4dfd0e902aa"],

Cell["Save the data to a file.", "Text",
 CellChangeTimes->{{3.8141852102866383`*^9, 
  3.814185215247013*^9}},ExpressionUUID->"f3373967-7fbe-4509-955b-\
55c1dc2921b1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DeleteFile", "[", "datafile", "]"}], "//", "Quiet"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.814200184095202*^9, 3.814200191790229*^9}, {
   3.81437005781945*^9, 3.814370059471539*^9}, 3.826293759800844*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"76f543e5-337c-4914-87a5-39057df5d0b6"],

Cell[BoxData[
 RowBox[{"Save", "[", 
  RowBox[{"datafile", ",", "data"}], "]"}]], "Input",
 CellChangeTimes->{{3.814185165895753*^9, 3.814185191715467*^9}, 
   3.814200164714316*^9, {3.8142001948693542`*^9, 3.814200196657713*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"b392e004-d02b-4865-8b85-759747245e3e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analysis", "Chapter",
 CellChangeTimes->{{3.826294589558628*^9, 
  3.826294590593788*^9}},ExpressionUUID->"b8c644a4-b24f-43a1-be8d-\
04e62d884755"],

Cell["Load simulation data.", "Text",
 CellChangeTimes->{{3.826294671052932*^9, 
  3.826294688294832*^9}},ExpressionUUID->"fc51d4d9-a97c-4618-a569-\
3a669b314868"],

Cell[BoxData[
 RowBox[{"Clear", "[", "data", "]"}]], "Input",
 CellChangeTimes->{{3.826294683046377*^9, 3.826294684801565*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"8ab57884-0489-499d-9f87-1d29c5a6865e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Get", "[", "datafile", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.814185203699359*^9, 3.8141852073032093`*^9}, 
   3.814192148676738*^9, {3.814266167190983*^9, 3.814266169523837*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"36a94fbe-ac14-45e7-afb5-c53dd4e919f4"],

Cell[TextData[{
 "Simulation result is as follows. The column piDelta is the average \
stationary value of the node with max in-degree ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[CapitalDelta]", "-"], TraditionalForm]],ExpressionUUID->
  "2f257e0d-7234-4145-a226-ad2c23305d30"],
 ". The column ",
 Cell[BoxData[
  FormBox["pimax", TraditionalForm]],ExpressionUUID->
  "c9705d11-6a94-4e44-a68a-919d640a1eef"],
 " is the average max stationary value."
}], "Text",
 CellChangeTimes->{{3.826298226156191*^9, 3.8262982294430857`*^9}, {
  3.826301763566758*^9, 3.826301805602715*^9}, {3.826301836825142*^9, 
  3.826301877822651*^9}},ExpressionUUID->"6f2b589d-4a8e-4692-9f68-\
6c0df4c0f47a"],

Cell[BoxData[
 RowBox[{"<<", "DCM`"}]], "Input",
 CellChangeTimes->{{3.826465370079472*^9, 3.8264653715592003`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"c62f0101-f3cf-4e6d-91bc-ef1996db7c7b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"simAnalyze", "/@", "data"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8262952300693207`*^9, 3.826295258018631*^9}, {
   3.826301751406323*^9, 3.826301753268094*^9}, 3.827165810954864*^9, 
   3.827166102672707*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"98cf47b8-de8f-4085-908d-d7cf26af7793"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "n" -> 1000, "m" -> 2000, "maxdeg" -> 15, "pimax" -> 
        0.00991315642551629, "piDelta" -> 0.007650168321796269, "prmax" -> 
        0.006686783150268946, "prDelta" -> 0.005939391341374174, 
        "\[CapitalDelta]/m" -> 0.0075, "pimax/(\[CapitalDelta]/m)" -> 
        1.3217541900688388`, "piDelta/(\[CapitalDelta]/m)" -> 
        1.0200224429061693`, "prmax/(\[CapitalDelta]/m)" -> 
        0.8915710867025262, "prDelta/(\[CapitalDelta]/m)" -> 
        0.7919188455165567, "hist" -> CompressedData["
1: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
         "]], 
       Association[
       "n" -> 3000, "m" -> 6000, "maxdeg" -> 20, "pimax" -> 
        0.004472536091795377, "piDelta" -> 0.0033023729826046743`, "prmax" -> 
        0.0029775468381278273`, "prDelta" -> 0.0025622429713937052`, 
        "\[CapitalDelta]/m" -> 0.0033333333333333335`, 
        "pimax/(\[CapitalDelta]/m)" -> 1.341760827538613, 
        "piDelta/(\[CapitalDelta]/m)" -> 0.9907118947814023, 
        "prmax/(\[CapitalDelta]/m)" -> 0.8932640514383482, 
        "prDelta/(\[CapitalDelta]/m)" -> 0.7686728914181116, 
        "hist" -> CompressedData["
1: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
/5FyXKXOB8vkuZebeQ/oIo1514eF+GF6SOr4Vj6Oav3jZMyhIbv2kpK5xf/z
edaDPHP2eDbMbn9/6T2dJvZ55qtaNclODkxef9iQfI6F39kbb5wY5GHFkwPJ
urOYENruHjxvzMGXpWXPmhcPY4VN50zTo78hCthW+Yiak9ZbbAZWGLOgKDVz
cclQr9jnj+qso5KjesQ+JzY6B323Y+Kl0xK9rLZusc8bjnWZqFD5K5flIfdx
ZT8CpnulFdiSWDHHzjp2JonCnxj0XMIU+zw9PeXsjS46Sj2bFmotGMT1c5+2
vWD2gjcvbq6sPRdRoowhF7Nesc/39Zx0YexjwXrcCZkj0myxz8s0ozQhz0F+
jk1QTxgDS+e85hSWdGJqZd/umEcDOOf2dWPTAjquYKqx6q0+hNbtMbGfzIHT
UOrE6NwOsc+X3fe2MS1qgsvMvwcmZndi0cifpuoxNjqnfNLYbMlCN8tMQrKI
JvZ5/mSdDapsyqsDeiklj9lw5j9Yy97IRl6TzrWV2gz0t1zpGzeLQFZ9U4P6
1x5UTzTYc7yNJvb55bDS72lyNJgG7j/q/KQXzzrqnJtfs//H54Ic+uYfP3rE
PteOuZ97YDYD832V4yTVOOgRnX/q9JcBeUXn7GXavzEuwNK4lnrdJ9/sa217
qT3etVW+8i0bq5s3zttA+UHT1pKMZfaJfT41XldntIop9rn6c8dpllTdFmpv
Fh64y8H1Bff6bWNJvMj7M7PRt1Ps8ws0v38OXmD8j89Tj/cs25VDR9SkmuyT
A9T9m5T7tJIM6H+b7nhpN4kvD+7NG8sikKQlSE2soePMmupjKppssc9pTmzr
pkljkNIzTi6fyMbGpaEZlyvY+GmVZ9pbxMWiC8tlB+cP4sEKv8ZWytX/9fkx
b9vk9O802Fkd04rz6oe15bX3WkIGfIit1l+bWHg9Zm6oR83Xf30eoP57rmhC
Lx7cjmwdYfTD6erXrpNUzn08edfM2I3a3xaF68yi5v3BL19iWGu7kEuywvnz
+nB8xhX7S+s4YGyxW2q5gIXyK+POOG0eQE7VyKdKqj//9XlZ3PX5KVRe/dfn
7VamU9uru8U+zycZKqzefkjTzrYVhv8W+9ws9rX37jXd0HG840l73AnLAu8l
86n611r0IYtmzkVnRFaIXQUNcTGdC9N12Zh4xLpBmdaPNQF1RkWMHmhN6j1V
/Iza02/UPmvJpuPnW8lS06d9Yp8HH31xzcyRwJSi+MKyaC5m/3qtf3EuB12F
kv4LV/fgBl/LWDWfgwdpngE3vGm4883ad8IZjtjn3isNY4qs2Li/8MeJ0vwu
VPVV0a569sPn14tPN252IO3Vn5CV1P0pfpH6U1hC1dP1wqw/hc3I6nlh9NqV
htBnVdeq1g/8j8+vWrcYxwg4mBWoZeb2iMBkff9pvuq0//F59ojeks/HmEi3
SKA1S3IQEhpiML+2B+ML0lgnzlF7g5GgdkiNBdPLZv3rphJQ7JG0TlhEiH0+
3L2Ltu42R+zz5140Wh9rAPVs23nMS724/khJ/cgQDWOz7v8MpvaCf33+1Uww
w6SqF74cS+IRuwcDKntNet4PIPiI1Js5nzioO+tWmhvQA83eJ72zsrjQO75f
u3Z/Dzia9vnb7GnodjXzk1MjQTQ4FkvLEBg6lNLeac/A8FqJg+to1Fyd5M2V
p/wp75ex50kwHyMOEW9dPfrROM710LPTNGTuXRj3Xr0fFgdT1kZQrvqvz4/O
jdBNVutDwzbi2m23HrHPVUfUfFcf6cY2yUk6bnmUD2u9S2eb0DBY8O2He34v
JKE4DR6dYp/Ts8ZOPPvIxuLMzgvscV3Ym6Btz1nahaAEpY2Jdh2wVfArtNnB
xvWgsPS4rwQqPKWkXFZz0DhR9E9PbQd2+R3KOrBDAL/F9CDFR3Q8SdqmXjyb
hS1K588G6dJxeIf8y/CZTLHPTymU/B1OJyC354uuSywHHwUX1EepfFBZuXf0
7zMmxq8688p8Ag928zwI11ssHDd38/o7px/TL6SunVtHw1+vLXLHuaTY5y3P
C6w4x6m+eCjRrapPh+uaNKnmM0w0e3vIEM590PbT/BBSw0V+EG9P+2cC9yWN
1C5r92Ozlevm4JZeZLxNVgpYSoPX+lc/y6mckdfMOn1be0Ds8/vNe6wslPvA
fRY9TiueK/b5oObn+7ZfBAgpr6hdcpWFczMuRbjSG/Bfn1cEzFeLSKUjeWbT
AqWXNBhLhrxhzaKjxnGrS64pF/UnLmRetmD+f33+fwBCSDki
         "]], 
       Association[
       "n" -> 5000, "m" -> 10000, "maxdeg" -> 24, "pimax" -> 
        0.0031927882484652256`, "piDelta" -> 0.0024420241695455105`, "prmax" -> 
        0.00214227338414943, "prDelta" -> 0.0018707475337667175`, 
        "\[CapitalDelta]/m" -> 0.0024, "pimax/(\[CapitalDelta]/m)" -> 
        1.3303284368605108`, "piDelta/(\[CapitalDelta]/m)" -> 
        1.0175100706439628`, "prmax/(\[CapitalDelta]/m)" -> 
        0.8926139100622624, "prDelta/(\[CapitalDelta]/m)" -> 
        0.7794781390694657, "hist" -> CompressedData["
1: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
zIP5YLB7dRUL6p8jDDImsuCgLjUjKYr5l8/FM45N2xjTjbHolENz7ZjI+Sj8
mtFE/OXz16eydvh4d8G/xznRs74XXmqhqa+8/+tz/UMegvKTDJHPr80Y2BRE
saChtP3KuIMc1K+POP1uJRPEkdaGudtIVDgmvjSg54rtgZfaCwwYGLTbvUg8
tBNPM+eldfdy8ajrXPZD2s9f4w39F01iIfzkxDsuDzrgYhNcLbucwKD6Jc6H
PaTI52c8xy/8UkAgf3ihHt+8HQ+DdMz2vWCIfH45/vBPHp0zLLqvu+ic7sHj
UTFh3pNekc/XSMt5OWQwsOrbgPeNZ4TI55tnv5u3dGwQd3cXZlIVXJgn7Eg7
I8bGVtNy7y/uHIjn2uq272TBYm9Ogd15AhL8n7vsSI7I5wU/1N0Nz/eKfH6w
XfPU+HdsWP+x8pE06hP5vFiD0Wrw6BdCykO3DQd1w1rqp82hESYY9/8x6Com
RD7vrit/YXmuS+Rzl9qg3RrJdP+Rt/deptWNVJ3zzSOWTLR1fqSmW/Vgarv2
JFKeg1bXvcNY1IdlT4R9I1oMhAcpLqmw78GMxQqZ99q4mPlh6v5G/16Rz+Us
536NW94LvfB97PeHerHg/b89pUc4Ip/X2ml3D9L1IDFuzGp+Kfd/+vyszZ+V
j6IJmMndDOwupvvPBU6Oql0XBs+4itleJ0Q+rxJbvdGU7tMsm/H77z3tQ5ay
grvd1C64fXLwCbZlQv30lK7LWT0in4dJVeasOE5iQ7xJaqozKfJ57qDtsp90
3z016c7nA/Rcap2q0+7n0CfyeUTyDnlbur4iFh/9GbKXg16PHt/yU/R3FIaf
KH3aIfJ5d5yCav4u+vtXzMhdGNYNvdkXxipTCSSvdvdyVGFCqcnX6UhTBwau
Jzdd1WGiMri0QfYWgcLnL7yoZey/fL7G1nbD+dO9yD7fsrC1sxfqJ21mdp9n
inxe6RDBX8ckMPzV8UiEbTfWqWphkRMTCYui++vsfqIkZnW2MKkbs/79EEb9
7EB/SuQO61A+LIvXj94rb0bOrMXcy1Eskc/tn/xrIVxGQNlSLDA5m/s/fb5K
tbaiSaXnL5+nDDwX9/xMIqxP6oEpfZ9vbwvwea3Qhxaz3vq5h0mcnnW81OM3
F3nmr/1Utfuhbeo2nJLzv31u7bPqovpLNn6fypt8aFwfdku6WtjTbvmPzyPm
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
5POKVSaZqr7/9fnKjmXzDPL4+D/2b03j
         "]], 
       Association[
       "n" -> 7000, "m" -> 14000, "maxdeg" -> 26, "pimax" -> 
        0.0024375123650813057`, "piDelta" -> 0.0018568070671073468`, "prmax" -> 
        0.0016335537668075346`, "prDelta" -> 0.0014303095190419638`, 
        "\[CapitalDelta]/m" -> 0.0018571428571428571`, 
        "pimax/(\[CapitalDelta]/m)" -> 1.312506658120703, 
        "piDelta/(\[CapitalDelta]/m)" -> 0.999819189980879, 
        "prmax/(\[CapitalDelta]/m)" -> 0.8796058744348263, 
        "prDelta/(\[CapitalDelta]/m)" -> 0.770166664099519, 
        "hist" -> CompressedData["
1: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
qNcbEdo45uqnVl7I4kJhVsP2Z80cnNHPDbEtZWFlpo3XhxkcSJ26GWvJ5sB9
0zntQn0eKGKl8hX+I/DaPM+q6TkDmRoVLjIODESJRCnkXGBhnhxlw+WbbDRW
LruYdpaFVQvfhDlc52L1zqiWpkk+Bk9oPLEXJeZmwPuckRQe9vH6nqjIsSFm
dDfyXRIbN/mPbvnsJe4Tt3Cd/gAXWS5qunLibKxPWfRSooYKuWgD2++3uETf
zG1OfcsB7YR+zsnLIzh8/W1+9z0mHDw0gxvn8CC/Z32N6uQYCoo0hPesoeP4
+HenUO9RaIZOeaq3jCB25fGqdWt58BI2vjs8l4P5HSpdh5ayEHpk0wq1DBa0
LlRRz+7jYv6EhtThxyOY26mfUqHFQ3WVmuLqHAZWPJMoVJDhIHwLleWRRkfN
gntx0kT/+/A9ODfoKxdtO7TXuA6x8H1YwtPlERcRgVoaVzSETLPObzzh9IWL
hcvufxCpJdb/lLVKXGECir4rGvNTOGh/Omdj9HIuyLrq4qTUEWS+Jt1K92Ei
uFc9oXcTC/45JweXyLOQpH9kjyGRE1zPt9ya6zGCsml/8sguTKzwc4wzTRuD
2sZbHmUjLHCFXG5EuhF1iAvgcy4ycaWgus72EBvaJxeeXf1mHBpjhSxSNhuW
8dIxekwuFs26krB9D7Hu3ZTm3WEMBDu0N1+WoeHZvk6+bBEbO6SOn++N4WDr
vlcHq02J82FWZVtOzBvlyorUU3E8bOu9pTKjlYvj+/Z9sNZlI/XbQG3ddSJH
6KVcvlvFg351phbZjY6S8Ctjt4240NO4sVIyhYqvPTrpJl5MJIt3W+3cz8Kh
oMOn79ex0JS7KdmG+P6UcW94UQ8DalZPjv08x8fUJ5MtA0eY+H2DJ0POZcGj
qmd1fRsdy3pOji/NZ0Puj6TemlPEPnVd9BU1m8D1re7GUcIcPHQPXSnKZcKy
LII8aMnDjdlZwhIviD6cba5lI8xCK7XBzKd6FM8YzzJd7rDhFNuf7BrKx/bl
lNchpxi4XfhDSoh4j+ffMVBWWMzCl+SbpwuTWMjf4FeaSfRd+Vmc2tFGGhK7
/podXz6KN3q/PmoR82dT/6x6EyKvrXCreHLXYRQyndoyscfGof6itfY88Vzu
IRetjbq5OPtrTfPHE3SI+rdVfpQk5l6ZYXkokf9y0oSj1W7wsZ7vqP7Tawwp
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
3z7alsgX4V326tZlJIHP92u6DYwTzvwvh2ApNw==
         "]], 
       Association[
       "n" -> 9000, "m" -> 18000, "maxdeg" -> 28, "pimax" -> 
        0.0020813412395217583`, "piDelta" -> 0.001596461560514345, "prmax" -> 
        0.001387373894878139, "prDelta" -> 0.0012106545786428387`, 
        "\[CapitalDelta]/m" -> 0.0015555555555555555`, 
        "pimax/(\[CapitalDelta]/m)" -> 1.3380050825497019`, 
        "piDelta/(\[CapitalDelta]/m)" -> 1.0262967174735076`, 
        "prmax/(\[CapitalDelta]/m)" -> 0.8918832181359465, 
        "prDelta/(\[CapitalDelta]/m)" -> 0.7782779434132535, 
        "hist" -> CompressedData["
1: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
         "]], 
       Association[
       "n" -> 11000, "m" -> 22000, "maxdeg" -> 29, "pimax" -> 
        0.0017412145386760916`, "piDelta" -> 0.0013280398160737327`, "prmax" -> 
        0.0011688738958548, "prDelta" -> 0.0010156652150337692`, 
        "\[CapitalDelta]/m" -> 0.0013181818181818182`, 
        "pimax/(\[CapitalDelta]/m)" -> 1.3209213741680697`, 
        "piDelta/(\[CapitalDelta]/m)" -> 1.0074784811593835`, 
        "prmax/(\[CapitalDelta]/m)" -> 0.8867319209932966, 
        "prDelta/(\[CapitalDelta]/m)" -> 0.7705046458876871, 
        "hist" -> CompressedData["
1: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
SxMB64qp3TtLhvE6yDXhfTuB9WWX2hdK/sEp5+SP4+DBK7GnPc6KxIL+4uIz
/1Bov/Pkj1YeF7rHcrRO0PmbUFh/RjmKQial7uuTQeDCsYBOaU8KlacPSb/p
GoWF98F89xkc7NPRjVX8PoQW1eK7+UZ87Og+sPpwGd17ImNFztbSc9HP9Xxr
TsKdNDrlNZsA12XnXxT9f50zs73Mr3Fh5nFfaXnGEBY8ymN953Bgky3j6b6X
nvvWOH9BGBesWy2hjHU8OC8xYYbX8+EfVC05ndaN+uXOB7J0Lh0pSS2LoXv5
hWfaw7fWkUhp35uOS3w41m+sf9PCgxVunQ/OpKBm9+RYUTEXS0VfByq0U1j9
1felTSSBMrPNazvpvTm/7Jvpbbofp19+0r3Cku7fbua7avvpPK/9W5CRQECH
XeK10JuLnxVHwludhrF2jvbVhDk8/KhQ/DoaykeeYOfHX1eHYKS1y3VqIwmr
ulnzNnvxUBi+eHPOUtqXm55avZHmY27pIpk9JgKo16d1hOcQmEyIf360cgJf
X5/2fnmAnteC4NWV2UOIOLnvZoc7Dwr1j2skr/Axhf8wtSBDAMVtHq2GdhR+
GUvpSGoL0Cz5sOr8SrpfzH/zqIL204zV8i0OiVzMmijJP7Z1BImDCZ7pa3n4
fEYla0SCgp682dE5t0iIlTkHXCJIiGoWddfSuRr4YUFqzw0SvVsf+nzqoCDj
UVCy3JLup6WGKt/CSRBFBvWL6HdlZmm5L7lFIUL9YOvUIAqSag+CQOf0qQ5Z
nZXPeShap77RuZpEcVTdkzC6j7IS+4vOynLgodLUzPz/vIzZeKFtD+23Gqte
fk6i7/fz1PVPI1w0+v36cNWQQE6CvvoSEQJ3eblFCdUcOF+zaT86m/bfB8vT
ZzwVwME1csFi82GEQWvTtx0CXHN6vDVqJ4HY9j9usmso1KdPXuxGv2+iZKiH
qz2dJxVaVwzSKRwuvp3bpjYCx4uFy7/Q57vEmCZ+fzuJY6Y2n8stedBZxNG/
+YSNfT+vjrUE0Lq/29T5lt6fX/ud9n6M+gMz/u0DbxQEOHVQzSrNicTDyuc9
O19KbvAbZjjt0Z2AfdUKf3XZUVTf8npDyrJRZf7r0ffbJPqq3D0JyyF8uefv
/PU63ee/bPzyqYnukWVbKn2GaG4bLC9tpX2hvm7zqW76/H46w/27L/LgYmfd
6XiRj+QsqiCO9t/PC95N0lGlkJbv8tyNoqC9WTSm+w0PcX3d55bSOix/8eXK
Q7p3/JkoeLK1bRgCiZ5R2a2DIHIm+CJhFEy2ifgXfqPQIsE4suUxD48lkxSI
dC6CjC4VibnQ/lA+xSHpOg8aS5/75ynw0XU+O4NPc+KJdbziOZ1DcOW2rFVs
5qHZ3vipdgoBxw2zRpX30H0x3+2QC61z9YqrCxTLefAW9+5Wp3vCn4TkyV6x
BKI6TS7touefnVFo2EH3Xvkr8vGHXElcmd/grkr3m+Sg2ZP307mdxZScdgLM
//F5NH9lSOz/+PzmWs6k4dB+pM6NCJ9vwBXyearaA9mUYTYeZF+4oDPKRq3q
+I0XogyI+7s7ZTqycF69dWbGVBZ+mFVIvuzug7y3qvg18V442s47WjqZgE34
7975Rt3orr/GcqoaRJB4hMR+2j/fJuQ3COie4t0sb+huy0Cdzyun4TUM6HXG
Ohwf70XFtN0Z0B3E3cDV10NbGUI+33CRW2ZUSgr5PO7mtshzdG9eovbW0tz9
NwJSqq3WJLIg8Tvw5stZHETdkU2SvUJglWVohWrKIFwuFS2sVO6D4uSasCfl
/Xhbq7zpt9X/+Pycq92rulKekM+TNy3b3iHRhQ/+6c9c3/XAZiSidDE9n3/5
vMpu9n7ZF/1oWJ2RXubNQ93FP2YHIhh4xVh1/3JJPy7+OqUXIsnF93821+s7
9mOnc7b8CXUO5Kr+qZNdTr/ntXD9U20sWCiuKNSS4mDM4HuTA4uNkfHC5Zsz
f0Mz3kZVfmJQyOcqd7LFXgcOCPmcGhn86t08LOTzqTNPvbrmxIaGf5phijIX
ZNjJRK+wfmRVHrAzVWbAu/XYwpKufhRcbmFL5XJhGZKnFKk/gI9hVR+YHv1C
Ptfb5rDRjcnG9ecZq0MEBAxiNsUeesWF52rqdSSd+2GGWWW3p/yGm9yciwYq
THBzJsvIcH4J+bw34NrVe3m/0dycFL5piAnjGNPOmh4OtB+IuxB0r5XYf3rR
4iQGkDEYbUFwoPKOypTzJ+BjXXqyxJqDYx5mXgbefZhkpaQoqsTB4hh/+atf
upE4Eqy8Ibkb+cXGCY4EF1mWD6hXVX0Qdfmjup7FxPnKVJZ/P4FtvHf8iIpu
FNi1fzUn2P/hc49OG352dZeQz08mPWzoLWZiImecEWzCgRmzulKGTeesx7cg
aVkuND6Ufjk6jYNJIe4zM4t70eyjOhbWzARHidJQ0B6E0uRZubolbUI+l0wb
OE27OepGxH8MhjIwefLZM17MbgSfG6zPiRoU8nnu3dqSR7Qecv2nRgcn9aPt
o0yrE92jPCrX+Zov52Chf+XieYpsHP91IsDhHIGWMDfv8DQ2IjSXbeyrZ6Cw
0+hoz0Uujg9NFSma+Rtx0Scc7k+whHx+5c4nsZaDTKxTj/ZyncREn8TQDL5s
D6y4tpLrJ9g4UbW81fMjKeTzmL09ilEPWsBPCalra2ZjS8kc96KzHVgYpLZI
4DqAlC1hIfNX96KLO9fMYSqJGBft1RtXsbHijnjC30pMnI6UyPkoyoGvb/Ka
STvY0GcqlLu29sCzeuacFRdIbNaVpjaIcuH7q/So+2yukM83bF734c50Wh+3
5KPjf3DwI+iu1D4rWjfzNyuys/pw5+N1faVX/cgjgi2K+WywP8sYXLFk49eg
512j6YNCPg+W00j/YMoU8vkL23Ypf2kCAQatk+4fZsO1/JF0zOZexFw77Nwa
0Cfk8z3N7m+DU3lCPjd1Lb8rW8qClZb9NvefA/DTdTXVF+0V8rlKmAo7z4Ml
5HPdSJntqg0MqFcu/tSczhHy+THdIx7vZbvRxn5k3RbQi4PvmC9ivzH/w+fl
r/eyysuH8VL/2EtHmV58D+1+JnBl/IfP1d5XNDrRejvip3dQwZ/ENFIlWLGk
D+ve82QES7m4uWP914xfDJT9uTu/4H0vBFyLGIVdLFT5mOr8uMnEJtfQ/uB+
Dha8CA0diKH350hB5KwsHjimPW4uVjxoP2KsTXFjIjk+86+hRjYEi70liz4M
onZGGiExysWb9Kp1JvksrJCebNy/8RemKFzctJFH67T9ZL3xDS7M/YbsRCJY
EFw2vOb1shd+i+w7ksrYOBUf2+S3jovEWr01ruIERDY+1ftsyRXyucrXRLM9
OztQXxpzVUyd9jUDqdCY11whn8uX+hj/uMfGOvGj8hIhvf/h8+w2X5m/6Dxl
NKx+dqKWQPjJ1ttF/SzoqZgEJAxyUJ3+T1hZB0fI5/epcrNHzmz49Ykah6T2
CPk8atbNaZ1rCLwTTbG658ZBYFrXuBqbwKSy7ePdR/rw+rFu8IylFN4eO5c/
pbkfU1XbQ1pN2NCZV1XdvbsfV8e2zQz2Zwr5PPIjQ/N3MQX+rNoHheqN0Hu2
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
nU31s99gvLiwdl79AP4PsWRs3A==
         "]]}, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "n"} -> 1, {All, "m"} -> 1, {All, "maxdeg"} -> 
        1, {All, "pimax"} -> 1, {All, "piDelta"} -> 1, {All, "prmax"} -> 
        1, {All, "prDelta"} -> 1, {All, "\[CapitalDelta]/m"} -> 
        1, {All, "pimax/(\[CapitalDelta]/m)"} -> 
        1, {All, "piDelta/(\[CapitalDelta]/m)"} -> 
        1, {All, "prmax/(\[CapitalDelta]/m)"} -> 
        1, {All, "prDelta/(\[CapitalDelta]/m)"} -> 1, {All, "hist"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "n" -> TypeSystem`PackageScope`AtomShape[34], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "maxdeg" -> 
            TypeSystem`PackageScope`AtomShape[34], "pimax" -> 
            TypeSystem`PackageScope`AtomShape[60], "piDelta" -> 
            TypeSystem`PackageScope`AtomShape[60], "prmax" -> 
            TypeSystem`PackageScope`AtomShape[60], "prDelta" -> 
            TypeSystem`PackageScope`AtomShape[60], "\[CapitalDelta]/m" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "pimax/(\[CapitalDelta]/m)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "piDelta/(\[CapitalDelta]/m)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "prmax/(\[CapitalDelta]/m)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "prDelta/(\[CapitalDelta]/m)" -> 
            TypeSystem`PackageScope`AtomShape[60], "hist" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`UnknownShape[False]], 2, 
              DirectedInfinity[1], {All, "hist"}]]], 
          DirectedInfinity[1], 10, {All}]], 6, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "n", "m", "maxdeg", "pimax", "piDelta", "prmax", "prDelta", 
         "\[CapitalDelta]/m", "pimax/(\[CapitalDelta]/m)", 
         "piDelta/(\[CapitalDelta]/m)", "prmax/(\[CapitalDelta]/m)", 
         "prDelta/(\[CapitalDelta]/m)", "hist"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Vector[
          TypeSystem`Vector[
           TypeSystem`Atom[Real], TypeSystem`AnyLength], 2]}], 6], "Meta" -> 
     Association[], "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "n"} -> 1, {All, "m"} -> 1, {All, "maxdeg"} -> 
        1, {All, "pimax"} -> 1, {All, "piDelta"} -> 1, {All, "prmax"} -> 
        1, {All, "prDelta"} -> 1, {All, "\[CapitalDelta]/m"} -> 
        1, {All, "pimax/(\[CapitalDelta]/m)"} -> 
        1, {All, "piDelta/(\[CapitalDelta]/m)"} -> 
        1, {All, "prmax/(\[CapitalDelta]/m)"} -> 
        1, {All, "prDelta/(\[CapitalDelta]/m)"} -> 1, {All, "hist"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "n" -> TypeSystem`PackageScope`AtomShape[34], "m" -> 
            TypeSystem`PackageScope`AtomShape[34], "maxdeg" -> 
            TypeSystem`PackageScope`AtomShape[34], "pimax" -> 
            TypeSystem`PackageScope`AtomShape[60], "piDelta" -> 
            TypeSystem`PackageScope`AtomShape[60], "prmax" -> 
            TypeSystem`PackageScope`AtomShape[60], "prDelta" -> 
            TypeSystem`PackageScope`AtomShape[60], "\[CapitalDelta]/m" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "pimax/(\[CapitalDelta]/m)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "piDelta/(\[CapitalDelta]/m)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "prmax/(\[CapitalDelta]/m)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "prDelta/(\[CapitalDelta]/m)" -> 
            TypeSystem`PackageScope`AtomShape[60], "hist" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`UnknownShape[False]], 2, 
              DirectedInfinity[1], {All, "hist"}]]], 
          DirectedInfinity[1], 10, {All}]], 6, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "n", "m", "maxdeg", "pimax", "piDelta", "prmax", "prDelta", 
         "\[CapitalDelta]/m", "pimax/(\[CapitalDelta]/m)", 
         "piDelta/(\[CapitalDelta]/m)", "prmax/(\[CapitalDelta]/m)", 
         "prDelta/(\[CapitalDelta]/m)", "hist"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Vector[
          TypeSystem`Vector[
           TypeSystem`Atom[Real], TypeSystem`AnyLength], 2]}], 6], 
     "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 6, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 6, "DataColumnCount" -> 
     13, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1], TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n", 
                  Style[
                  "n", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "n"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "n"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["m", 
                  Style[
                  "m", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "m"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "m"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["maxdeg", 
                  Style[
                  "maxdeg", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "maxdeg"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "maxdeg"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pimax", 
                  Style[
                  "pimax", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "pimax"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "pimax"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["piDelta", 
                  Style[
                  "piDelta", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "piDelta"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "piDelta"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["prmax", 
                  Style[
                  "prmax", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "prmax"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "prmax"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["prDelta", 
                  Style[
                  "prDelta", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "prDelta"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "prDelta"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[CapitalDelta]/m", 
                  Style[
                  "\[CapitalDelta]/m", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "\[CapitalDelta]/m"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "\[CapitalDelta]/m"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pimax/(\[CapitalDelta]/m)", 
                  Style[
                  "pimax/(\[CapitalDelta]/m)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "pimax/(\[CapitalDelta]/m)"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "pimax/(\[CapitalDelta]/m)"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["piDelta/(\[CapitalDelta]/m)", 
                  Style[
                  "piDelta/(\[CapitalDelta]/m)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "piDelta/(\[CapitalDelta]/m)"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "piDelta/(\[CapitalDelta]/m)"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["maxdeg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00991316"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["pimax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00765017"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["piDelta"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00668678"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["prmax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00593939"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["prDelta"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0075"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["\[CapitalDelta]/m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.32175"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["pimax/(\[CapitalDelta]/m)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.02002"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["piDelta/(\[CapitalDelta]/m)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["maxdeg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00447254"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["pimax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00330237"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["piDelta"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00297755"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["prmax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00256224"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["prDelta"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00333333"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["\[CapitalDelta]/m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.34176"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["pimax/(\[CapitalDelta]/m)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.990712"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["piDelta/(\[CapitalDelta]/m)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["5000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["maxdeg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00319279"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["pimax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00244202"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["piDelta"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00214227"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["prmax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00187075"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["prDelta"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0024"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["\[CapitalDelta]/m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.33033"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["pimax/(\[CapitalDelta]/m)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.01751"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["piDelta/(\[CapitalDelta]/m)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["7000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["26"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["maxdeg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00243751"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["pimax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00185681"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["piDelta"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00163355"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["prmax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00143031"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["prDelta"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00185714"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["\[CapitalDelta]/m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.31251"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["pimax/(\[CapitalDelta]/m)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.999819"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["piDelta/(\[CapitalDelta]/m)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["9000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["28"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["maxdeg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00208134"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["pimax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00159646"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["piDelta"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00138737"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["prmax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00121065"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["prDelta"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00155556"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["\[CapitalDelta]/m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.33801"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["pimax/(\[CapitalDelta]/m)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0263"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["piDelta/(\[CapitalDelta]/m)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["11000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["n"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["29"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["maxdeg"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00174121"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["pimax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00132804"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["piDelta"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00116887"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["prmax"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00101567"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["prDelta"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00131818"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["\[CapitalDelta]/m"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.32092"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["pimax/(\[CapitalDelta]/m)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.00748"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["piDelta/(\[CapitalDelta]/m)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 90 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[True, 13, 1], {1, 13 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 90 Degree, {9,
                     9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + (-10) 
                    If[False, 13, 1], {1, 13 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    13, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"columns ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    13, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 2 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 2, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 5 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 5, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Columns", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 100000000, {}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], (-90) 
                    Degree, {9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[False, 13, 1], {1, 13 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{2, 0}, {16, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], (-90) Degree, {9, 
                    9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$hPos$$ + 
                    10 If[True, 13, 1], {1, 13 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = 
                    And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{661., {122.25909090909092`, 127.74090909090908`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{661., {122.25909090909092`, 127.74090909090908`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellEditDuplicate->True,
 CellChangeTimes->{
  3.8271661031662683`*^9, 3.82716618302605*^9, 3.827166263364081*^9, 
   3.8271663179016542`*^9, 3.827166421493692*^9, {3.827166489980094*^9, 
   3.827166500026286*^9}, 3.827166579264494*^9, {3.827166701752952*^9, 
   3.827166773158711*^9}, 3.827167068078506*^9, 3.8271671647654667`*^9, 
   3.827167214367714*^9, 3.827167533039941*^9, 3.827167879189184*^9, 
   3.827168743887333*^9, 3.827313458196149*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"94ec461f-6a1b-484a-972e-33e4483a1aa5"]
}, Open  ]],

Cell[TextData[{
 "We see that ",
 Cell[BoxData[
  FormBox["piDelta", TraditionalForm]],ExpressionUUID->
  "abd272d9-a3cd-4457-8b76-792d47da305d"],
 " is more or less ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    SuperscriptBox["\[CapitalDelta]", "-"], "m"], TraditionalForm]],
  ExpressionUUID->"6962e254-19a9-4a1c-848d-8a354898542f"],
 ", while the ",
 Cell[BoxData[
  FormBox["pimax", TraditionalForm]],ExpressionUUID->
  "f4f6118a-e617-474b-a258-4a5cc18d0eef"],
 " is larger by a constant factor of about ",
 Cell[BoxData[
  FormBox["1.3", TraditionalForm]],ExpressionUUID->
  "5decfbdc-0a01-4381-ab3c-d0b05d4b631a"],
 "."
}], "Text",
 CellChangeTimes->{{3.826298396566244*^9, 3.826298428579076*^9}, {
   3.826299548462599*^9, 3.8262995922586727`*^9}, {3.8263002574915237`*^9, 
   3.826300266624016*^9}, {3.826300510072472*^9, 3.8263005115632343`*^9}, {
   3.826301427373592*^9, 3.826301427725017*^9}, 3.8263017828652897`*^9, {
   3.82630182282603*^9, 
   3.826301833242408*^9}},ExpressionUUID->"2b0cbe50-7fa7-4f01-b72b-\
10027907c823"],

Cell[BoxData[
 RowBox[{
  RowBox[{"col", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<pimax/(\[CapitalDelta]/m)\>\"", ",", 
     "\"\<piDelta/(\[CapitalDelta]/m)\>\"", ",", 
     "\"\<prmax/(\[CapitalDelta]/m)\>\"", ",", 
     "\"\<prDelta/(\[CapitalDelta]/m)\>\""}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.827164386657852*^9, 3.827164446693161*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"151203d8-674f-46d3-a6c9-ac0179412071"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"result", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "[", "col", "]"}]], "Input",
 CellChangeTimes->{{3.8271644978184013`*^9, 3.8271645018306417`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"2a74a5b9-7fe0-4100-9a7b-71fa5a2aa510"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "pimax/(\[CapitalDelta]/m)" -> 1.3217541900688388`, 
       "piDelta/(\[CapitalDelta]/m)" -> 1.0200224429061693`, 
       "prmax/(\[CapitalDelta]/m)" -> 0.8915710867025262, 
       "prDelta/(\[CapitalDelta]/m)" -> 0.7919188455165567], "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[117.], 
         TypeSystem`PackageScope`AtomShape[60]]], 4, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration[
        "piDelta/(\[CapitalDelta]/m)", "pimax/(\[CapitalDelta]/m)", 
         "prDelta/(\[CapitalDelta]/m)", "prmax/(\[CapitalDelta]/m)"]], 
       TypeSystem`Atom[Real], 4], "Meta" -> Association[], "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[117.], 
         TypeSystem`PackageScope`AtomShape[60]]], 4, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration[
        "piDelta/(\[CapitalDelta]/m)", "pimax/(\[CapitalDelta]/m)", 
         "prDelta/(\[CapitalDelta]/m)", "prmax/(\[CapitalDelta]/m)"]], 
       TypeSystem`Atom[Real], 4], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     4, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pimax/(\[CapitalDelta]/m)", 
                  Style[
                  "pimax/(\[CapitalDelta]/m)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pimax/(\[CapitalDelta]/m)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pimax/(\[CapitalDelta]/m)"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{117., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.32175"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pimax/(\[CapitalDelta]/m)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["piDelta/(\[CapitalDelta]/m)", 
                  Style[
                  "piDelta/(\[CapitalDelta]/m)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["piDelta/(\[CapitalDelta]/m)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["piDelta/(\[CapitalDelta]/m)"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{117., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.02002"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["piDelta/(\[CapitalDelta]/m)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["prmax/(\[CapitalDelta]/m)", 
                  Style[
                  "prmax/(\[CapitalDelta]/m)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["prmax/(\[CapitalDelta]/m)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["prmax/(\[CapitalDelta]/m)"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{117., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.891571"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["prmax/(\[CapitalDelta]/m)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["prDelta/(\[CapitalDelta]/m)", 
                  Style[
                  "prDelta/(\[CapitalDelta]/m)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["prDelta/(\[CapitalDelta]/m)"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["prDelta/(\[CapitalDelta]/m)"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{117., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.791919"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["prDelta/(\[CapitalDelta]/m)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{213., {65.25909090909092, 70.74090909090908}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{213., {65.25909090909092, 70.74090909090908}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.827164502155334*^9, 3.8271645371145887`*^9, 
  3.827168744190847*^9, 3.82731345857135*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"b8c76135-f08b-4eab-99b4-728df0045782"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Head", "[", "row", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"row", ",", " ", 
     RowBox[{"Normal", "[", "result", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8271646963594522`*^9, 3.827164757929131*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"4393533f-f9a2-4114-9f06-2086fcf64d5d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "Association", ",", "Association", ",", "Association", ",", "Association", 
   ",", "Association", ",", "Association"}], "}"}]], "Output",
 CellChangeTimes->{{3.82716470714289*^9, 3.82716475833753*^9}, 
   3.827168744308827*^9, 3.827313458679533*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"8f124641-7299-4cb9-a3be-d4f099afb9e0"]
}, Open  ]],

Cell["This can also be seen from the picture.", "Text",
 CellChangeTimes->{{3.826300514051465*^9, 
  3.826300519158935*^9}},ExpressionUUID->"38f7c6ec-fcca-404b-a993-\
4920879dba5f"],

Cell[BoxData[{
 RowBox[{"<<", "MaTeX`"}], "\n", 
 RowBox[{
  RowBox[{"points", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"row", "=", "#"}], "}"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"row", "[", "\"\<n\>\"", "]"}], ",", 
              RowBox[{"row", "[", "#", "]"}]}], "}"}], ")"}], "&"}], "/@", 
          "col"}]}], "]"}], "&"}], "/@", "result"}], "//", "Normal"}], "//", 
    "Transpose"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8263012060238667`*^9, 3.8263012117193327`*^9}, {
   3.826301435095521*^9, 3.8263014428472767`*^9}, {3.826301970614644*^9, 
   3.826302010405408*^9}, {3.826305401951702*^9, 3.826305424573319*^9}, {
   3.826305473639503*^9, 3.8263055144720573`*^9}, {3.826305604577471*^9, 
   3.826305640893468*^9}, 3.826363138478121*^9, {3.826366906155045*^9, 
   3.826366908412436*^9}, {3.826370028240251*^9, 3.826370029939762*^9}, {
   3.8263803558254747`*^9, 3.8263803985918007`*^9}, {3.826465972415677*^9, 
   3.8264660835639677`*^9}, {3.8264661256268473`*^9, 3.82646616660535*^9}, {
   3.826466321110209*^9, 3.8264663327437363`*^9}, {3.8264664120804853`*^9, 
   3.826466413626484*^9}, {3.827164457994422*^9, 3.82716445830433*^9}, {
   3.827164791574193*^9, 3.8271647952417316`*^9}, {3.8271648306973953`*^9, 
   3.827164913917884*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"c0343931-4fd6-45f4-a1f1-e5ffcacd9754"],

Cell[BoxData[
 RowBox[{
  RowBox[{"legends", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"MaTeX", "[", 
       RowBox[{"#", ",", 
        RowBox[{"Magnification", "\[Rule]", "2"}]}], "]"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\\\\frac{\\\\pi_{\\\\max}}{\\\\Delta^{-}/m}\>\"", ",", 
       "\"\<\\\\frac{\\\\pi_{\\\\Delta^{-}}}{\\\\Delta^{-}/m}\>\"", ",", 
       "\"\<\\\\frac{\\\\mathrm{PR}_{\\\\max}}{\\\\Delta^{-}/m}\>\"", ",", 
       "\"\<\\\\frac{\\\\mathrm{PR}_{\\\\Delta^{-}}}{\\\\Delta^{-}/m}\>\""}], 
      "}"}]}], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.827164947463564*^9, 3.8271649537997017`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"e09487af-a69e-47f9-aab2-746e4b287d47"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"texStyle", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FontFamily", "\[Rule]", "\"\<Latin Modern Roman\>\""}], ",", 
     RowBox[{"FontSize", "\[Rule]", "24"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{"plt", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"points", ",", 
    RowBox[{"BaseStyle", "\[Rule]", "texStyle"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1.5"}], "}"}]}], ",", 
    RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<n\>\"", ",", "None"}], "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], ",", " ", 
       RowBox[{"{", "1", "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "legends"}], ",", 
    RowBox[{"GridLinesStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Thick", ",", "Gray", ",", " ", "Dashed"}], "]"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"PointSize", "[", "0.02", "]"}]}], ",", 
    RowBox[{"Ticks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"nlist", ",", " ", "Automatic"}], "}"}]}]}], "]"}]}]}], "Input",\

 CellChangeTimes->{{3.8263012060238667`*^9, 3.8263012117193327`*^9}, {
   3.826301435095521*^9, 3.8263014428472767`*^9}, {3.826301970614644*^9, 
   3.826302010405408*^9}, {3.826305401951702*^9, 3.826305424573319*^9}, {
   3.826305473639503*^9, 3.8263055144720573`*^9}, {3.826305604577471*^9, 
   3.826305640893468*^9}, 3.826363138478121*^9, {3.826366906155045*^9, 
   3.826366908412436*^9}, {3.826370028240251*^9, 3.826370029939762*^9}, {
   3.8263803558254747`*^9, 3.8263803985918007`*^9}, {3.826465972415677*^9, 
   3.8264660835639677`*^9}, {3.826466356994673*^9, 3.8264663641886578`*^9}, {
   3.826466439308228*^9, 3.826466480720117*^9}, {3.826466593971155*^9, 
   3.826466673265634*^9}, {3.8271649446014147`*^9, 3.827164958268881*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"10755343-e564-4ce2-a30d-59ff776aad5c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDwAGIQDQYO/Q5pqrt3PFf9ag/mFyx3uBUw1fhWOZTfsdnB
WnhKBZsnlB+x20F2kttvNgYof8pBh+43ZSwVGVB+zVGHIKus4jolKB9oPnvt
dF7moA9w8xezVOe93Pwebn6Z85nFO9w/wM2/YxhzoeXfe7j5KcsjpLdlf4Cb
38nbcHCh3Ae4+b8888QOtL+Bm59543PtvKlv4ObfbfzK7T3hDdz8OFUmi92q
b+Dm89/Yvsav6w3c/Lcd8vOlE97AzT/Tc8kgLfwl3Hyjs3ZPvs94ATc/mylD
uebjC7j5329H9JssfQE3/yafq+ry5y/g5svLfYj+ufwF3HwGZAA0H4UPNB+F
DzQfhQ80H4UPNB+FP2o+QfNH0//ApH8Am44lvQ==
      
      "], {{{}, {}, {}, {}, {}, {}, {}, {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.3]], 
         LineBox[{43, 1}], 
         LineBox[{44, 2}], 
         LineBox[{45, 3}], 
         LineBox[{46, 4}], 
         LineBox[{47, 5}], 
         LineBox[{48, 6}]}, {}, {
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.3]], 
         LineBox[{37, 7}], 
         LineBox[{38, 8}], 
         LineBox[{39, 9}], 
         LineBox[{40, 10}], 
         LineBox[{41, 11}], 
         LineBox[{42, 12}]}, {}, {
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          Opacity[0.3]], 
         LineBox[{31, 13}], 
         LineBox[{32, 14}], 
         LineBox[{33, 15}], 
         LineBox[{34, 16}], 
         LineBox[{35, 17}], 
         LineBox[{36, 18}]}, {}, {
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          Opacity[0.3]], 
         LineBox[{25, 19}], 
         LineBox[{26, 20}], 
         LineBox[{27, 21}], 
         LineBox[{28, 22}], 
         LineBox[{29, 23}], 
         LineBox[{30, 24}]}}, {{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], FontFamily -> "Latin Modern Roman", 
          FontSize -> 24, 
          PointSize[0.02]], 
         PointBox[{49, 50, 51, 52, 53, 54}]}, {
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], FontFamily -> "Latin Modern Roman", 
          FontSize -> 24, 
          PointSize[0.02]], 
         PointBox[{55, 56, 57, 58, 59, 60}]}, {
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], FontFamily -> "Latin Modern Roman", 
          FontSize -> 24, 
          PointSize[0.02]], 
         PointBox[{61, 62, 63, 64, 65, 66}]}, {
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6], FontFamily -> "Latin Modern Roman", 
          FontSize -> 24, 
          PointSize[0.02]], 
         PointBox[{67, 68, 69, 70, 71, 72}]}}}], {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"n\"", TraditionalForm], None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontFamily -> "Latin Modern Roman", FontSize -> 24}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{}, {1}}, GridLinesStyle -> Directive[
       Thickness[Large], 
       GrayLevel[0.5], 
       Dashing[{Small, Small}]], ImageSize -> Large, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 11000.}, {0, 1.5}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {{{1000, 
         FormBox["1000", TraditionalForm]}, {3000, 
         FormBox["3000", TraditionalForm]}, {5000, 
         FormBox["5000", TraditionalForm]}, {7000, 
         FormBox["7000", TraditionalForm]}, {9000, 
         FormBox["9000", TraditionalForm]}, {11000, 
         FormBox["11000", TraditionalForm]}}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       GraphicsBox[
        RasterBox[CompressedData["
1:eJztWVksXVsYbt0bvYaY3ogoiYikpG9y74MxPBBDUiV4KBqKiHNjaMUQD4ag
kdQULaEqVDrQIjEFJZGS4MHspTE15qmJakz13/Ot3L1jczbnuI5Tri9ZrP2v
ddb61/7X+v/1f9vs4d/3HqnduHEj9g/pn3vB8Y4xMcEJ3nrSBx9JbESYJDTE
VRIXGhYa8+fD36RCS2n5S1p+lxa6htLQ0dGhahWUDg8PD9rf31e1GkpFXl4e
NTU1qVoNpWJpaYkCAwNVrYbScf/+ffr+/bto+9bWFu3u7gpk6C9rj6+urh7r
K4agoCDS0dGRu+jq6tLAwIBii/sXVVVVVFlZKdoeGxtLT548EcjCwsIoMzNT
IHv9+jU9fvyYCgsLaWZm5tR5oW9ISAg1NDScWGpqakhDQ4McHR3PtD4ANvH2
9hZtf/v2Ld29e1cge/nyJdna2gpkAQEBlJOTQwcHB1ReXi7X3Hh/p/m858+f
E8JrV1eXXGOKAftmcXFRZtvCwgKpqanR2toaL5uamiJ1dXX68eMHL6uoqCAb
GxtWb2xspJ2dnVPnhS1hfzFgDBMTE3JwcJB3KaJoaWmhZ8+eibZbWlrSx48f
BTJTU1Nqa2vjnzc3N0lLS4tGR0cVmjsuLo5+/vwps+3FixfnYkMA+8Xd3V20
PTIykiQSiUD24MEDSkpKEsjgv54+farQ3P39/VRdXX1MDt91+/Ztsre3V2i8
kxAdHU0TExMCGc4i9gvOvbm5ueB9FxcXk7W1teA8ZWRkkJ+fn8Jzw1cdtSXG
hw07OzsVHk8MOBtH7YJzV19fT1++fKFbt24J9nNzczNZWFhQfn4+L4M9XFxc
FJ4btnzz5g3/fJoNEc82NjZklm/fvp04l5ubG/OLh4H3mZaWxmIF/FJpaSmL
N/7+/tTT00PT09O8zMfHh4aGhhReI4D4xNmypKSE2fDTp08y+757945SU1Nl
Fuh6UoxOT0+n7u7uM+n4X9HX18fOBvSDP7Ozs1PKPNibERERShlbHsTHx/M2
VGZO5OXlJVdsUwZgS01NzWP3i/MGYtLRWHiRwJ1L2Xnt+vo6u5dddcBHXuMa
pwExIjEx8dIXxGkx1NXVsXvfZS+4A17jGtc4G7a3t2l5eZnVkXuI5ea/EsbG
xsjV1ZV8fX1pcnKSxXV9fX0qKyujr1+/sjzeycmJBgcHqba2lvXDHQocEX6H
HOXz588s542KimJjgrMxMzNj9+ZfBSkpKYwL5GBgYMDXoS9yfyA8PJzXG3c5
IyMj9o5mZ2eZDHkwuCtnZ2fq7e29EN3BFyLGHEZ7e/sxbk3eNUJ/cDFY5/Dw
MFvjYYDPsLKyolevXp33UkQBPlpbW5vm5uZ4maGhIb1//17QD2s8zPXq6ekx
ngDAGsFvAuDUkHODK4CdjI2NBeNgDOR2+D5ykQDHDB4CQL538+ZNWllZ4dth
U+QpwcHBjKsZGRlh/GdBQQHjPHDGuBwKfCHHncCWHC+O8XJzc9kZxByI6+A4
MNZFAHrBT3C4c+eOoB0+EraZn59nffF9Cr4Tura2tjKe6DDgl3D/gp/hAN54
fHyc/R4cBL4B4RkczkUBeR7HMYFvuiqALTh8+PCB58E4/34VgH3G8arwr0VF
RayelZWlMh5GGUhISGDfYbKzs8nT05P9h2+B70Od80WXHfCJycnJjNs+WsCl
7u3tqVrF/x3+AfjMN88=
         "], {{0, 0}, {57., 40.}}, {0, 255}, 
         ColorFunction -> RGBColor], {
        ImageSize -> {74.63175093399751, 52.834211706102124`}, 
         ImageSize -> {37.315875466998754`, 26.417105853051062`}, 
         BaselinePosition -> Scaled[0.46128117295974486`], 
         PlotRange -> {{0, 57.}, {0, 40.}}}], 
       GraphicsBox[
        RasterBox[CompressedData["
1:eJztmWkorF8YwPG/WcP/C77hSvJFygf9fbB98OEvwrWEbHPjTqIRY+nyQbYs
KZGyZskSki1bZJcPSClLRJYvlmzZsj93ntOdyTsz78y8l9eY2/zqmTnvc05n
eZ9znnPO8379nvDth5aGhgZfV/DzjZPmnpTE+en/r+AhkMeP5fJiov/nJcdw
Y5L++/6PQGkrECeBfBEIqGGNsbExZXeBdby9veHp6UnZ3WCV0tJSGBwcVHY3
WOXo6AgiIyOV3Q3WCQgIgOvra9r8m5sbeHh4oOiwvLQ5fnJyIlGWjqioKDAy
MlJYjI2NYXFxkdngftPc3AxNTU20+Xw+H1JTUyk6LpcL+fn5FF1LSwukpKRA
eXk57O3tyW0X+xsdHQ19fX0ypbOzE/T09MDd3f2PxoegTfz9/Wnz29vbwd7e
nqKrq6sDZ2dnii40NBSKi4vh5eUF6uvrFWob3588n1dRUQG4vU5OTipUJx04
bw4PD6XmHRwcgJaWFpyenop0Ozs7oK2tDbe3tyJdY2MjODo6kvTAwADc39/L
bRdtifanA+swNzcHNzc3RYdCy/DwMJSUlNDm29raQnd3N0VnaWkJo6Ojouer
qyswMDCAlZUVRm0nJyfD8/Oz1LzKysp3sSGC88XLy4s2Py4uDng8HkUXEREB
GRkZFB36r6KiIkZtLywsQGtrq4QefZeFhQW4uroyqk8WiYmJsL6+TtHhWsT5
guve2tqa8r6rqqrAzs6Osp7y8vIgODiYcdvoq8RtifWjDScmJhjXRweuDXG7
4Lrr7e2Fra0t0NHRocznoaEhsLGxgbKyMpEO7eHh4cG4bbRlW1ub6FmeDXE/
Oz8/lyoXFxcy2/L09CR+8TX4PnNycshegX6ptraW7DchISEwNzcHu7u7Il1g
YCAsLy8zHiOC+5PQltXV1cSG4+PjUst2dHRAdna2VMG+ytqjc3NzYWZm5o/6
+Fbm5+fJ2sD+oT9zcXFhpR2cm7GxsazUrQhpaWkiG7J5J/Lx8VFob2MDtKW+
vr7E+eK9wT1JfC/8SPDMxfa99uzsjJzL/nbQR6pRIw/cI9LT01VecJ+mo6en
h5z7VF3wDKhGjRoqx8fH0N/fL1fwvqKqXF5egoODAwQFBUkVKysrEpMSv1Op
GhhHex1zEoLjNzEx+dSx8v39fZiamqLourq6JObd3d0d5b4uJDMzk7V72nuB
dxFTU1PR/Rnj1JqamrC2tiZRFmMJ+E6E4HcAQ0NDcpf/7Dg5OcHs7CxJLy0t
gZmZmdRy+B4wxiskPj4efH19P6SPbwXPfllZWSS9sbEBfn5+tGXRf66ursL2
9jbo6uqS9GvwblxQUEBiN+KyubnJ6jhk8fj4COHh4SSNfiUsLExm+cLCQnI/
5HA4H9G9N4F+RAjGbYVxeZyDspienibfSF6vzc9KTU0NiXsiGO8bGRkhaeG8
lQXTeL2yQB+CMc6EhAQy/zDWhP/4/Rv/UTC+reqgj2hoaCDxbWmC3wLVfBy/
AOvOaak=
         "], {{0, 0}, {57., 40.}}, {0, 255}, ColorFunction -> 
         RGBColor], {
        ImageSize -> {74.63175093399751, 52.834211706102124`}, 
         ImageSize -> {37.315875466998754`, 26.417105853051062`}, 
         BaselinePosition -> Scaled[0.46128117295974486`], 
         PlotRange -> {{0, 57.}, {0, 40.}}}], 
       GraphicsBox[
        RasterBox[CompressedData["
1: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
h38AKR4n1w==
         "], {{0, 0}, {57., 44.}}, {0, 255}, ColorFunction -> 
         RGBColor], {
        ImageSize -> {75.19625404732254, 59.24481195516812}, 
         ImageSize -> {37.59812702366127, 29.62240597758406}, 
         BaselinePosition -> Scaled[0.4113681239571944], 
         PlotRange -> {{0, 57.}, {0, 44.}}}], 
       GraphicsBox[
        RasterBox[CompressedData["
1:eJztWWlIVVsUdkqeaKKi4PTn/bEfPVAQ4flTfwT+MESTpKDUntoz9Yk+nEot
czY1AwtEK0cUrcQ/mjPO4oANIiSK5liKY2U5tJ7fhnu5R8+5nnvzeutxP1h6
zzr77L3WOXuvvde3fvf/xzNQR0tLK/K3/T+eftEuERF+sV4m+xfeYZF/B4UF
/OUW9m9AUEDEn/66+8o/9sV5X/T2hTRQGRoaGtRtgspx/vx52t7eVrcZKsWj
R4+otrZW3WaoFCsrK3Tp0iW1jP3582daX18XLRsbG7Szs6PUWPARvgphbm6O
jSGLmZkZ+vTp06G2r169ouXlZVHj+vr6EsKtWNHW1mb9KwPMVcxZIURFRVFw
cDBHh+ubN29ydHl5eZSWlkYlJSX09u3bI8cdHx+nyMhIGh0dlSt9fX1kYGBA
Xl5eSvkHIOa4u7sL3q+rqyM7OzuOrrKykhwdHTm6K1eu0N27d9nvJ0+eiBo7
Li6Ovnz5IrdNUlIS6ejo0Js3b0T1KYSQkBD2XvmwtrZGurq6bM5K8OHDB6Zb
XV2V6jAfzpw5w3739PTQt2/fjhx3cnKSHjx4IHgfY5uYmNDFixfFuiKI/v5+
SkhIELzv5OREpaWlHN3Zs2fpxYsX0mvMBwsLC+rs7FRo7Fu3brH4wwfYhG84
NjamUJ9CcHNzo+/fv3N0W1tb7H9sbCz5+flx7t24cYNCQ0M5OsSR27dvKzTu
9PQ03b9//5AecdDY2JguX76sUH/ykJycTB0dHRxdWVkZmy8vX74kc3Nz9luC
8vJysrGx4czXnJwcdq5QFImJibS5ucnRYa1iPbx7907h/oSA9xkUFMTRwf7C
wkKamppi6yIzM1NqS01NDbm4uFBqaqp0H3n8+LFSa2d2dpZyc3Ol19h/Tp8+
TVevXuVtj/WO8fnk2bNncvdRDw8P6fyUAN8wKyuL2traaG9vj6qrq9k3jImJ
oY8fP7L+qqqqmC46OprzrRUB4if2eQD96Onp0cTEBG9bxEfsKXyC2HJwzcmi
qKiI2asOLCwsUHZ2NntvhoaGdO3aNZWMg/fo7e2tkr7FADEhICCATp06xdaH
qoC9HPufOoBx8Q0PxoXjRn19PW8sPyngLIjzsCqxu7sr92z3f4HsuU0DDYSA
c6GRkdEvL/L2N+QkOIf/6iImt9JAAw24AF9jb28vV3x8fNRt5g8BsSE+Pp6d
gQ8KOAZTU1N6/vy5us1UCMhxX79+zeFHkVeCPzoI5AHOzs4qswXnKXAAyLUd
HBxYzvH06VO5z9y5c4c8PT1Ze+Tj6enpnPsPHz4kMzMzlktmZGRI4ztyynv3
7nHaIo8Dn9LV1XW8jvEAXAJ4YpyVxaC1tZW1Hxoa4uiRGyK3lnBP4DZaWlo4
zw0ODkqvwUeCFzgJgHuGzeAZxACcBNoPDw9z9LAfenAyQpDcA5cAbvog54ec
Jz8/n1f4agNicVw+DgwMMD3WnhBQT0BN8sKFCxQYGHjoPmzAeuaTH8Fx+QhO
CRzC0tKS3OdRx0AuPj8/r7TNikLio4RzgoyMjAieB/l8RNxAfaKiouLI8cAD
FhcXH5v9YgAf8f4l3JqEW0SuDo7uYB1Y4mNKSgrjgMF5hoeH0/Xr16m7u/tE
bRcL+Kivr39I//XrV7K1tWUckyyE5ur79+/J0tKSCgoKVGqvMhDyEUD9DrVH
2bUj5CPg7+/P4qWyPK+qIM/HiIgIVtdZXFyU6uT5iNoo2mN//5kg5CM4eysr
K1YrkoWQj/h21tbWbG//WYBzSWNjI507d469e9T6mpubqampiXGQrq6ubK7K
xhycW8LCwpiP4NXRHoL6LtqjriSvFnDSwL6K8xWf9Pb2Hqq9AO3t7YfaQoe6
ugaqx38U+lQg
         "], {{0, 0}, {57., 44.}}, {0, 255}, ColorFunction -> 
         RGBColor], {
        ImageSize -> {74.63175093399751, 59.24481195516812}, 
         ImageSize -> {37.315875466998754`, 29.62240597758406}, 
         BaselinePosition -> Scaled[0.4113681239571944], 
         PlotRange -> {{0, 57.}, {0, 44.}}}]}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], FontFamily -> 
                    "Latin Modern Roman", FontSize -> 24, 
                    PointSize[0.72]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], FontFamily -> 
                    "Latin Modern Roman", FontSize -> 24, 
                    PointSize[0.72]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], FontFamily -> 
                    "Latin Modern Roman", FontSize -> 24, 
                    PointSize[0.72]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], FontFamily -> 
                    "Latin Modern Roman", FontSize -> 24, 
                    PointSize[0.72]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], FontFamily -> 
                    "Latin Modern Roman", FontSize -> 24, 
                    PointSize[0.72]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], FontFamily -> 
                    "Latin Modern Roman", FontSize -> 24, 
                    PointSize[0.72]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], FontFamily -> 
                    "Latin Modern Roman", FontSize -> 24, 
                    PointSize[0.72]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], FontFamily -> 
                    "Latin Modern Roman", FontSize -> 24, 
                    PointSize[0.72]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   RowBox[{
                    "FontFamily", "\[Rule]", "\"Latin Modern Roman\""}], ",", 
                   
                   RowBox[{"FontSize", "\[Rule]", "24"}], ",", 
                   RowBox[{"PointSize", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   RowBox[{
                    "FontFamily", "\[Rule]", "\"Latin Modern Roman\""}], ",", 
                   
                   RowBox[{"FontSize", "\[Rule]", "24"}], ",", 
                   RowBox[{"PointSize", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   RowBox[{
                    "FontFamily", "\[Rule]", "\"Latin Modern Roman\""}], ",", 
                   
                   RowBox[{"FontSize", "\[Rule]", "24"}], ",", 
                   RowBox[{"PointSize", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   RowBox[{
                    "FontFamily", "\[Rule]", "\"Latin Modern Roman\""}], ",", 
                   
                   RowBox[{"FontSize", "\[Rule]", "24"}], ",", 
                   RowBox[{"PointSize", "[", "0.02`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False", ",", "False"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.826300532351117*^9, 3.826300635500434*^9}, {
   3.826300681688135*^9, 3.826300741255275*^9}, {3.826300820907337*^9, 
   3.8263008349334583`*^9}, {3.82630098989392*^9, 3.826301037980536*^9}, {
   3.82630113424751*^9, 3.826301148565444*^9}, 3.826301240586143*^9, {
   3.8263013329330673`*^9, 3.826301367153966*^9}, {3.82630140722901*^9, 
   3.82630144477435*^9}, {3.826301981722452*^9, 3.8263020120959873`*^9}, {
   3.826305448319268*^9, 3.826305516366826*^9}, {3.826305612904022*^9, 
   3.8263056425814877`*^9}, 3.8263667193268433`*^9, {3.8263668970829153`*^9, 
   3.82636691310712*^9}, 3.826369655234531*^9, 3.8263700337578173`*^9, 
   3.8263730664298973`*^9, 3.8263801075497227`*^9, 3.826380362163062*^9, 
   3.8263804027473097`*^9, 3.826381409970326*^9, 3.8264658149427643`*^9, 
   3.826466366948749*^9, 3.82646642117859*^9, 3.826466489938526*^9, {
   3.826466603074575*^9, 3.826466632683777*^9}, 3.826466674063023*^9, 
   3.8264694978167057`*^9, 3.826544418385194*^9, 3.826727149332323*^9, 
   3.827143461411244*^9, 3.827164210278892*^9, 3.827164921494669*^9, 
   3.827164958662941*^9, 3.827168747479594*^9, 3.827313462831979*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"960bebbd-ca11-4288-b6bf-99740ac749bd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<simulation.pdf\>\"", ",", "plt"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.82630146262014*^9, 3.826301490177413*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"26c71121-78ca-467b-b1f8-16c2c664dffa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"h1", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"Histogram", "[", 
       RowBox[{
        RowBox[{"#", "[", "\"\<hist\>\"", "]"}], ",", 
        RowBox[{"BaseStyle", "->", "texStyle"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
        RowBox[{"ChartLegends", "\[Rule]", "legends"}], ",", 
        RowBox[{"ChartStyle", "\[Rule]", 
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}]}]}], "]"}], ",", 
      RowBox[{"MaTeX", "[", 
       RowBox[{
        RowBox[{"StringForm", "[", 
         RowBox[{"\"\<n=``\>\"", ",", 
          RowBox[{"#", "[", "\"\<n\>\"", "]"}]}], "]"}], ",", 
        RowBox[{"Magnification", "\[Rule]", "2"}]}], "]"}]}], "]"}], "&"}], 
   " ", "@", " ", 
   RowBox[{"result", "[", 
    RowBox[{"[", 
     RowBox[{"-", "1"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.827166728351494*^9, 3.8271667331293993`*^9}, {
   3.827167090119149*^9, 3.827167092107039*^9}, {3.827167885948704*^9, 
   3.827167966671492*^9}, {3.827168015899886*^9, 3.8271681475454473`*^9}, {
   3.827168185403708*^9, 3.827168201586829*^9}, {3.827168255256521*^9, 
   3.8271682819244556`*^9}, {3.82716831571212*^9, 3.8271683190105543`*^9}, {
   3.827168358321433*^9, 3.827168358705867*^9}, {3.827168933559387*^9, 
   3.827168990672439*^9}, {3.827169027384284*^9, 3.827169050600259*^9}, {
   3.827313509031382*^9, 3.827313532375601*^9}, {3.827313692930195*^9, 
   3.8273137069242973`*^9}, 3.8273137730734*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"447ca743-bfa2-45cf-b3e3-4a296a3fb1dd"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     GraphicsBox[{{
        Directive[
         EdgeForm[
          Directive[
           Thickness[Small], 
           Opacity[0.5599999999999999]]], 
         RGBColor[
         0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
            Directive[
             Opacity[0.5], 
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.5599999999999999]]], 
              RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798]]], {{
              TagBox[
               TooltipBox[
                TagBox[{
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.8, 0.}, {0.9, 1}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , 
                 TagBoxNote -> "1"], 
                StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                Style[1, {}], "Tooltip"]& ]}, {
              TagBox[
               TooltipBox[
                TagBox[{
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    RectangleBox[{0.9, 0.}, {1., 7}, "RoundingRadius" -> 0]}],
                    "DelayedMouseEffectStyle"]}, StatusArea[#, 7]& , 
                 TagBoxNote -> "7"], 
                StyleBox["7", {}, StripOnInput -> False]], Annotation[#, 
                Style[7, {}], "Tooltip"]& ]}, {
              TagBox[
               TooltipBox[
                TagBox[{
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1., 0.}, {1.1, 38}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 38]& , 
                 TagBoxNote -> "38"], 
                StyleBox["38", {}, StripOnInput -> False]], Annotation[#, 
                Style[38, {}], "Tooltip"]& ]}, {
              TagBox[
               TooltipBox[
                TagBox[{
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.1, 0.}, {1.2, 96}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 96]& , 
                 TagBoxNote -> "96"], 
                StyleBox["96", {}, StripOnInput -> False]], Annotation[#, 
                Style[96, {}], "Tooltip"]& ]}, {
              TagBox[
               TooltipBox[
                TagBox[{
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.2, 0.}, {1.3, 124}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 124]& , 
                 TagBoxNote -> "124"], 
                StyleBox["124", {}, StripOnInput -> False]], Annotation[#, 
                Style[124, {}], "Tooltip"]& ]}, {
              TagBox[
               TooltipBox[
                TagBox[{
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.3, 0.}, {1.4, 106}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 106]& , 
                 TagBoxNote -> "106"], 
                StyleBox["106", {}, StripOnInput -> False]], Annotation[#, 
                Style[106, {}], "Tooltip"]& ]}, {
              TagBox[
               TooltipBox[
                TagBox[{
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.4, 0.}, {1.5, 55}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 55]& , 
                 TagBoxNote -> "55"], 
                StyleBox["55", {}, StripOnInput -> False]], Annotation[#, 
                Style[55, {}], "Tooltip"]& ]}, {
              TagBox[
               TooltipBox[
                TagBox[{
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.5, 0.}, {1.6, 30}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 30]& , 
                 TagBoxNote -> "30"], 
                StyleBox["30", {}, StripOnInput -> False]], Annotation[#, 
                Style[30, {}], "Tooltip"]& ]}, {
              TagBox[
               TooltipBox[
                TagBox[{
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.6, 0.}, {1.7, 17}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 17]& , 
                 TagBoxNote -> "17"], 
                StyleBox["17", {}, StripOnInput -> False]], Annotation[#, 
                Style[17, {}], "Tooltip"]& ]}, {
              TagBox[
               TooltipBox[
                TagBox[{
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.7, 0.}, {1.8, 10}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 10]& , 
                 TagBoxNote -> "10"], 
                StyleBox["10", {}, StripOnInput -> False]], Annotation[#, 
                Style[10, {}], "Tooltip"]& ]}, {
              TagBox[
               TooltipBox[
                TagBox[{
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.8, 0.}, {1.9, 7}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 7]& , 
                 TagBoxNote -> "7"], 
                StyleBox["7", {}, StripOnInput -> False]], Annotation[#, 
                Style[7, {}], "Tooltip"]& ]}, {
              TagBox[
               TooltipBox[
                TagBox[{
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    RectangleBox[{1.9, 0.}, {2., 4}, "RoundingRadius" -> 0]}],
                    "DelayedMouseEffectStyle"]}, StatusArea[#, 4]& , 
                 TagBoxNote -> "4"], 
                StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
                Style[4, {}], "Tooltip"]& ]}, {
              TagBox[
               TooltipBox[
                TagBox[{
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    RectangleBox[{2., 0.}, {2.1, 3}, "RoundingRadius" -> 0]}],
                    "DelayedMouseEffectStyle"]}, StatusArea[#, 3]& , 
                 TagBoxNote -> "3"], 
                StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                Style[3, {}], "Tooltip"]& ]}, {
              TagBox[
               TooltipBox[
                TagBox[{
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{2.1, 0.}, {2.2, 1}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , 
                 TagBoxNote -> "1"], 
                StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                Style[1, {}], "Tooltip"]& ]}, {
              TagBox[
               TooltipBox[
                TagBox[{
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{3.8, 0.}, {3.9, 1}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , 
                 TagBoxNote -> "1"], 
                StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                Style[1, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
            Directive[
             Opacity[0.5], 
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.5599999999999999]]], 
              RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051]]], {{
              TagBox[
               TooltipBox[
                TagBox[{
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.3, 0.}, {0.4, 1}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , 
                 TagBoxNote -> "1"], 
                StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                Style[1, {}], "Tooltip"]& ]}, {
              TagBox[
               TooltipBox[
                TagBox[{
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.4, 0.}, {0.5, 2}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 2]& , 
                 TagBoxNote -> "2"], 
                StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                Style[2, {}], "Tooltip"]& ]}, {
              TagBox[
               TooltipBox[
                TagBox[{
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.5, 0.}, {0.6, 11}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 11]& , 
                 TagBoxNote -> "11"], 
                StyleBox["11", {}, StripOnInput -> False]], Annotation[#, 
                Style[11, {}], "Tooltip"]& ]}, {
              TagBox[
               TooltipBox[
                TagBox[{
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    RectangleBox[{0.6, 0.}, {0.7, 32}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 32]& , 
                 TagBoxNote -> "32"], 
                StyleBox["32", {}, StripOnInput -> False]], Annotation[#, 
                Style[32, {}], "Tooltip"]& ]}, {
              TagBox[
               TooltipBox[
                TagBox[{
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.7, 0.}, {0.8, 56}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 56]& , 
                 TagBoxNote -> "56"], 
                StyleBox["56", {}, StripOnInput -> False]], Annotation[#, 
                Style[56, {}], "Tooltip"]& ]}, {
              TagBox[
               TooltipBox[
                TagBox[{
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.8, 0.}, {0.9, 69}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 69]& , 
                 TagBoxNote -> "69"], 
                StyleBox["69", {}, StripOnInput -> False]], Annotation[#, 
                Style[69, {}], "Tooltip"]& ]}, {
              TagBox[
               TooltipBox[
                TagBox[{
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.9, 0.}, {1., 80}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 80]& , 
                 TagBoxNote -> "80"], 
                StyleBox["80", {}, StripOnInput -> False]], Annotation[#, 
                Style[80, {}], "Tooltip"]& ]}, {
              TagBox[
               TooltipBox[
                TagBox[{
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1., 0.}, {1.1, 94}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 94]& , 
                 TagBoxNote -> "94"], 
                StyleBox["94", {}, StripOnInput -> False]], Annotation[#, 
                Style[94, {}], "Tooltip"]& ]}, {
              TagBox[
               TooltipBox[
                TagBox[{
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.1, 0.}, {1.2, 60}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 60]& , 
                 TagBoxNote -> "60"], 
                StyleBox["60", {}, StripOnInput -> False]], Annotation[#, 
                Style[60, {}], "Tooltip"]& ]}, {
              TagBox[
               TooltipBox[
                TagBox[{
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.2, 0.}, {1.3, 36}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 36]& , 
                 TagBoxNote -> "36"], 
                StyleBox["36", {}, StripOnInput -> False]], Annotation[#, 
                Style[36, {}], "Tooltip"]& ]}, {
              TagBox[
               TooltipBox[
                TagBox[{
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.3, 0.}, {1.4, 31}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 31]& , 
                 TagBoxNote -> "31"], 
                StyleBox["31", {}, StripOnInput -> False]], Annotation[#, 
                Style[31, {}], "Tooltip"]& ]}, {
              TagBox[
               TooltipBox[
                TagBox[{
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.4, 0.}, {1.5, 13}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 13]& , 
                 TagBoxNote -> "13"], 
                StyleBox["13", {}, StripOnInput -> False]], Annotation[#, 
                Style[13, {}], "Tooltip"]& ]}, {
              TagBox[
               TooltipBox[
                TagBox[{
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.5, 0.}, {1.6, 7}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 7]& , 
                 TagBoxNote -> "7"], 
                StyleBox["7", {}, StripOnInput -> False]], Annotation[#, 
                Style[7, {}], "Tooltip"]& ]}, {
              TagBox[
               TooltipBox[
                TagBox[{
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.6, 0.}, {1.7, 3}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 3]& , 
                 TagBoxNote -> "3"], 
                StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                Style[3, {}], "Tooltip"]& ]}, {
              TagBox[
               TooltipBox[
                TagBox[{
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.7, 0.}, {1.8, 1}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 1]& , 
                 TagBoxNote -> "1"], 
                StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                Style[1, {}], "Tooltip"]& ]}, {
              TagBox[
               TooltipBox[
                TagBox[{
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.8, 0.}, {1.9, 2}, "RoundingRadius" -> 
                    0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 2]& , 
                 TagBoxNote -> "2"], 
                StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                Style[2, {}], "Tooltip"]& ]}, {
              TagBox[
               TooltipBox[
                TagBox[{
                  TagBox[
                   DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    RectangleBox[{2., 0.}, {2.1, 2}, "RoundingRadius" -> 0]}],
                    "DelayedMouseEffectStyle"]}, StatusArea[#, 2]& , 
                 TagBoxNote -> "2"], 
                StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                Style[2, {}], 
                "Tooltip"]& ]}}}, {}, {}}}}}, {{{{{}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, {}}}}}, {
      AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {True, True}, AxesLabel -> {None, None}, 
       AxesOrigin -> {0.264, 0.}, 
       BaseStyle -> {FontFamily -> "Latin Modern Roman", FontSize -> 24}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Large, PlotRange -> NCache[{{
           Rational[3, 10], 
           Rational[21, 10]}, {All, All}}, {{0.3, 2.1}, {All, All}}], 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
         GraphicsBox[
          RasterBox[CompressedData["
1:eJztWVksXVsYbt0bvYaY3ogoiYikpG9y74MxPBBDUiV4KBqKiHNjaMUQD4ag
kdQULaEqVDrQIjEFJZGS4MHspTE15qmJakz13/Ot3L1jczbnuI5Tri9ZrP2v
ddb61/7X+v/1f9vs4d/3HqnduHEj9g/pn3vB8Y4xMcEJ3nrSBx9JbESYJDTE
VRIXGhYa8+fD36RCS2n5S1p+lxa6htLQ0dGhahWUDg8PD9rf31e1GkpFXl4e
NTU1qVoNpWJpaYkCAwNVrYbScf/+ffr+/bto+9bWFu3u7gpk6C9rj6+urh7r
K4agoCDS0dGRu+jq6tLAwIBii/sXVVVVVFlZKdoeGxtLT548EcjCwsIoMzNT
IHv9+jU9fvyYCgsLaWZm5tR5oW9ISAg1NDScWGpqakhDQ4McHR3PtD4ANvH2
9hZtf/v2Ld29e1cge/nyJdna2gpkAQEBlJOTQwcHB1ReXi7X3Hh/p/m858+f
E8JrV1eXXGOKAftmcXFRZtvCwgKpqanR2toaL5uamiJ1dXX68eMHL6uoqCAb
GxtWb2xspJ2dnVPnhS1hfzFgDBMTE3JwcJB3KaJoaWmhZ8+eibZbWlrSx48f
BTJTU1Nqa2vjnzc3N0lLS4tGR0cVmjsuLo5+/vwps+3FixfnYkMA+8Xd3V20
PTIykiQSiUD24MEDSkpKEsjgv54+farQ3P39/VRdXX1MDt91+/Ztsre3V2i8
kxAdHU0TExMCGc4i9gvOvbm5ueB9FxcXk7W1teA8ZWRkkJ+fn8Jzw1cdtSXG
hw07OzsVHk8MOBtH7YJzV19fT1++fKFbt24J9nNzczNZWFhQfn4+L4M9XFxc
FJ4btnzz5g3/fJoNEc82NjZklm/fvp04l5ubG/OLh4H3mZaWxmIF/FJpaSmL
N/7+/tTT00PT09O8zMfHh4aGhhReI4D4xNmypKSE2fDTp08y+757945SU1Nl
Fuh6UoxOT0+n7u7uM+n4X9HX18fOBvSDP7Ozs1PKPNibERERShlbHsTHx/M2
VGZO5OXlJVdsUwZgS01NzWP3i/MGYtLRWHiRwJ1L2Xnt+vo6u5dddcBHXuMa
pwExIjEx8dIXxGkx1NXVsXvfZS+4A17jGtc4G7a3t2l5eZnVkXuI5ea/EsbG
xsjV1ZV8fX1pcnKSxXV9fX0qKyujr1+/sjzeycmJBgcHqba2lvXDHQocEX6H
HOXz588s542KimJjgrMxMzNj9+ZfBSkpKYwL5GBgYMDXoS9yfyA8PJzXG3c5
IyMj9o5mZ2eZDHkwuCtnZ2fq7e29EN3BFyLGHEZ7e/sxbk3eNUJ/cDFY5/Dw
MFvjYYDPsLKyolevXp33UkQBPlpbW5vm5uZ4maGhIb1//17QD2s8zPXq6ekx
ngDAGsFvAuDUkHODK4CdjI2NBeNgDOR2+D5ykQDHDB4CQL538+ZNWllZ4dth
U+QpwcHBjKsZGRlh/GdBQQHjPHDGuBwKfCHHncCWHC+O8XJzc9kZxByI6+A4
MNZFAHrBT3C4c+eOoB0+EraZn59nffF9Cr4Tura2tjKe6DDgl3D/gp/hAN54
fHyc/R4cBL4B4RkczkUBeR7HMYFvuiqALTh8+PCB58E4/34VgH3G8arwr0VF
RayelZWlMh5GGUhISGDfYbKzs8nT05P9h2+B70Od80WXHfCJycnJjNs+WsCl
7u3tqVrF/x3+AfjMN88=
           "], {{0, 0}, {57., 40.}}, {0, 255}, 
           ColorFunction -> RGBColor], {
          ImageSize -> {74.63175093399751, 52.834211706102124`}, 
           ImageSize -> {37.315875466998754`, 26.417105853051062`}, 
           BaselinePosition -> Scaled[0.46128117295974486`], 
           PlotRange -> {{0, 57.}, {0, 40.}}}], 
         GraphicsBox[
          RasterBox[CompressedData["
1:eJztmWkorF8YwPG/WcP/C77hSvJFygf9fbB98OEvwrWEbHPjTqIRY+nyQbYs
KZGyZskSki1bZJcPSClLRJYvlmzZsj93ntOdyTsz78y8l9eY2/zqmTnvc05n
eZ9znnPO8379nvDth5aGhgZfV/DzjZPmnpTE+en/r+AhkMeP5fJiov/nJcdw
Y5L++/6PQGkrECeBfBEIqGGNsbExZXeBdby9veHp6UnZ3WCV0tJSGBwcVHY3
WOXo6AgiIyOV3Q3WCQgIgOvra9r8m5sbeHh4oOiwvLQ5fnJyIlGWjqioKDAy
MlJYjI2NYXFxkdngftPc3AxNTU20+Xw+H1JTUyk6LpcL+fn5FF1LSwukpKRA
eXk57O3tyW0X+xsdHQ19fX0ypbOzE/T09MDd3f2PxoegTfz9/Wnz29vbwd7e
nqKrq6sDZ2dnii40NBSKi4vh5eUF6uvrFWob3588n1dRUQG4vU5OTipUJx04
bw4PD6XmHRwcgJaWFpyenop0Ozs7oK2tDbe3tyJdY2MjODo6kvTAwADc39/L
bRdtifanA+swNzcHNzc3RYdCy/DwMJSUlNDm29raQnd3N0VnaWkJo6Ojouer
qyswMDCAlZUVRm0nJyfD8/Oz1LzKysp3sSGC88XLy4s2Py4uDng8HkUXEREB
GRkZFB36r6KiIkZtLywsQGtrq4QefZeFhQW4uroyqk8WiYmJsL6+TtHhWsT5
guve2tqa8r6rqqrAzs6Osp7y8vIgODiYcdvoq8RtifWjDScmJhjXRweuDXG7
4Lrr7e2Fra0t0NHRocznoaEhsLGxgbKyMpEO7eHh4cG4bbRlW1ub6FmeDXE/
Oz8/lyoXFxcy2/L09CR+8TX4PnNycshegX6ptraW7DchISEwNzcHu7u7Il1g
YCAsLy8zHiOC+5PQltXV1cSG4+PjUst2dHRAdna2VMG+ytqjc3NzYWZm5o/6
+Fbm5+fJ2sD+oT9zcXFhpR2cm7GxsazUrQhpaWkiG7J5J/Lx8VFob2MDtKW+
vr7E+eK9wT1JfC/8SPDMxfa99uzsjJzL/nbQR6pRIw/cI9LT01VecJ+mo6en
h5z7VF3wDKhGjRoqx8fH0N/fL1fwvqKqXF5egoODAwQFBUkVKysrEpMSv1Op
GhhHex1zEoLjNzEx+dSx8v39fZiamqLourq6JObd3d0d5b4uJDMzk7V72nuB
dxFTU1PR/Rnj1JqamrC2tiZRFmMJ+E6E4HcAQ0NDcpf/7Dg5OcHs7CxJLy0t
gZmZmdRy+B4wxiskPj4efH19P6SPbwXPfllZWSS9sbEBfn5+tGXRf66ursL2
9jbo6uqS9GvwblxQUEBiN+KyubnJ6jhk8fj4COHh4SSNfiUsLExm+cLCQnI/
5HA4H9G9N4F+RAjGbYVxeZyDspienibfSF6vzc9KTU0NiXsiGO8bGRkhaeG8
lQXTeL2yQB+CMc6EhAQy/zDWhP/4/Rv/UTC+reqgj2hoaCDxbWmC3wLVfBy/
AOvOaak=
           "], {{0, 0}, {57., 40.}}, {0, 255}, ColorFunction -> 
           RGBColor], {
          ImageSize -> {74.63175093399751, 52.834211706102124`}, 
           ImageSize -> {37.315875466998754`, 26.417105853051062`}, 
           BaselinePosition -> Scaled[0.46128117295974486`], 
           PlotRange -> {{0, 57.}, {0, 40.}}}], 
         GraphicsBox[
          RasterBox[CompressedData["
1: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
h38AKR4n1w==
           "], {{0, 0}, {57., 44.}}, {0, 255}, ColorFunction -> 
           RGBColor], {
          ImageSize -> {75.19625404732254, 59.24481195516812}, 
           ImageSize -> {37.59812702366127, 29.62240597758406}, 
           BaselinePosition -> Scaled[0.4113681239571944], 
           PlotRange -> {{0, 57.}, {0, 44.}}}], 
         GraphicsBox[
          RasterBox[CompressedData["
1:eJztWWlIVVsUdkqeaKKi4PTn/bEfPVAQ4flTfwT+MESTpKDUntoz9Yk+nEot
czY1AwtEK0cUrcQ/mjPO4oANIiSK5liKY2U5tJ7fhnu5R8+5nnvzeutxP1h6
zzr77L3WOXuvvde3fvf/xzNQR0tLK/K3/T+eftEuERF+sV4m+xfeYZF/B4UF
/OUW9m9AUEDEn/66+8o/9sV5X/T2hTRQGRoaGtRtgspx/vx52t7eVrcZKsWj
R4+otrZW3WaoFCsrK3Tp0iW1jP3582daX18XLRsbG7Szs6PUWPARvgphbm6O
jSGLmZkZ+vTp06G2r169ouXlZVHj+vr6EsKtWNHW1mb9KwPMVcxZIURFRVFw
cDBHh+ubN29ydHl5eZSWlkYlJSX09u3bI8cdHx+nyMhIGh0dlSt9fX1kYGBA
Xl5eSvkHIOa4u7sL3q+rqyM7OzuOrrKykhwdHTm6K1eu0N27d9nvJ0+eiBo7
Li6Ovnz5IrdNUlIS6ejo0Js3b0T1KYSQkBD2XvmwtrZGurq6bM5K8OHDB6Zb
XV2V6jAfzpw5w3739PTQt2/fjhx3cnKSHjx4IHgfY5uYmNDFixfFuiKI/v5+
SkhIELzv5OREpaWlHN3Zs2fpxYsX0mvMBwsLC+rs7FRo7Fu3brH4wwfYhG84
NjamUJ9CcHNzo+/fv3N0W1tb7H9sbCz5+flx7t24cYNCQ0M5OsSR27dvKzTu
9PQ03b9//5AecdDY2JguX76sUH/ykJycTB0dHRxdWVkZmy8vX74kc3Nz9luC
8vJysrGx4czXnJwcdq5QFImJibS5ucnRYa1iPbx7907h/oSA9xkUFMTRwf7C
wkKamppi6yIzM1NqS01NDbm4uFBqaqp0H3n8+LFSa2d2dpZyc3Ol19h/Tp8+
TVevXuVtj/WO8fnk2bNncvdRDw8P6fyUAN8wKyuL2traaG9vj6qrq9k3jImJ
oY8fP7L+qqqqmC46OprzrRUB4if2eQD96Onp0cTEBG9bxEfsKXyC2HJwzcmi
qKiI2asOLCwsUHZ2NntvhoaGdO3aNZWMg/fo7e2tkr7FADEhICCATp06xdaH
qoC9HPufOoBx8Q0PxoXjRn19PW8sPyngLIjzsCqxu7sr92z3f4HsuU0DDYSA
c6GRkdEvL/L2N+QkOIf/6iImt9JAAw24AF9jb28vV3x8fNRt5g8BsSE+Pp6d
gQ8KOAZTU1N6/vy5us1UCMhxX79+zeFHkVeCPzoI5AHOzs4qswXnKXAAyLUd
HBxYzvH06VO5z9y5c4c8PT1Ze+Tj6enpnPsPHz4kMzMzlktmZGRI4ztyynv3
7nHaIo8Dn9LV1XW8jvEAXAJ4YpyVxaC1tZW1Hxoa4uiRGyK3lnBP4DZaWlo4
zw0ODkqvwUeCFzgJgHuGzeAZxACcBNoPDw9z9LAfenAyQpDcA5cAbvog54ec
Jz8/n1f4agNicVw+DgwMMD3WnhBQT0BN8sKFCxQYGHjoPmzAeuaTH8Fx+QhO
CRzC0tKS3OdRx0AuPj8/r7TNikLio4RzgoyMjAieB/l8RNxAfaKiouLI8cAD
FhcXH5v9YgAf8f4l3JqEW0SuDo7uYB1Y4mNKSgrjgMF5hoeH0/Xr16m7u/tE
bRcL+Kivr39I//XrV7K1tWUckyyE5ur79+/J0tKSCgoKVGqvMhDyEUD9DrVH
2bUj5CPg7+/P4qWyPK+qIM/HiIgIVtdZXFyU6uT5iNoo2mN//5kg5CM4eysr
K1YrkoWQj/h21tbWbG//WYBzSWNjI507d469e9T6mpubqampiXGQrq6ubK7K
xhycW8LCwpiP4NXRHoL6LtqjriSvFnDSwL6K8xWf9Pb2Hqq9AO3t7YfaQoe6
ugaqx38U+lQg
           "], {{0, 0}, {57., 44.}}, {0, 255}, ColorFunction -> 
           RGBColor], {
          ImageSize -> {74.63175093399751, 59.24481195516812}, 
           ImageSize -> {37.315875466998754`, 29.62240597758406}, 
           BaselinePosition -> Scaled[0.4113681239571944], 
           PlotRange -> {{0, 57.}, {0, 44.}}}]}, "SwatchLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.5599999999999999]]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.5599999999999999]]], 
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> True], 
   GraphicsBox[
    RasterBox[CompressedData["
1:eJztl2sobVsUxznELeLkg25R+IQQUtwkJR8k5bGv80Gk9mGfTWqf7HOF+CSl
iFJEnh+830REQkLej5RXUSR5v9+vcfcYtVdr7bXXztm6x+m2fjX3nnOsudaa
6z/nHGNMh6/fJd8+GRgY/PhD9SORpgYoldL0vz+rGl8UPxLlCll8sOIfmVym
/Ourkcr4p6pEqIqxqoCIiIiIiIiIyP+Qu7s76O/v59lnZ2ehu7v7l45lY2MD
FhcXYWlpiVPYLC8vc65h//X1dU6fp6cnqKurg4aGBqisrITn52feu66vr6G6
uhrq6+uhsbFR63i2tragrKwMKioqYG5uTnDcJycnYGxsDKenp4xtbW0NAgIC
yFZcXPwzMryL6elpaGtrAy8vL7C1tSUdBgcHOX2Gh4dJGzs7O3B3d4fW1laY
nJxkrl9cXICvry+srKxQe2xsDMLDw+Hq6orps7m5Cf7+/rC3t0ft5uZmiI2N
hdfXV6ZPTU0NxMfHw+PjI82JQqGg+RACx9LR0cG0FxYWwNramu6fmJjgzfN/
TVpaGoSEhOjsI5FIIDk5mWdPTU2l+9kkJiZCVlYW046IiICqqipOn8DAQGY9
ot5WVlZwcHDAXL+8vARLS0s4OjrSOh7UGAsbJycn6OzspLlRz6kmuEdiYmIg
KirqTQXn+y28R0N7e3toamri2HD94Pcg6LuMjIxonbBB7UNDQ6ne3t4ONjY2
vGe7uLjQ3tYGauXm5sax5eTk0Dg/An01vLm5AUNDQ9q/bAYGBsDExAReXl7I
f+JR9/DwkNOnqKgInJ2dqZ6dnQ0+Pj68dwYFBUFKSgrPvrOzA+fn5+QT2c+d
mZmh/fwR6KshxiTUB8fOZnR0lOzo/3p6eqiOfpMNxg1zc3OqJyQkkL/UJCws
jPaTJiUlJfTv6ekJGRkZjF295tk+QRPcy7gHcG7eUvr6+nTqokZfDVdXV3Vq
uL29DV1dXYIampqaUl0mkwlqGBkZybPjvWdnZxAcHAz5+fnQ0tJC9v39fXB0
dITb21ud34Jzu7u7+6bCjo260FdDjLe6NMRvwnkU0tDCwoLqSUlJghpGR0fz
7LiW0Ner18jx8THlFOXl5bTPPwJ9NXx4eCCfNDU1xbEPDQ2BmZkZ1TFvQw1x
3bApLS0FDw8Pqufl5YGfnx/vnTimzMzMn/6ej+A9cRljo2bOjHmMt7c31XHN
oJ7z8/O8d2KOgWAMEorLQvn47wLmUJjX69IQcxKMv0IaFhQUgFKp5NgwP8R1
JtRGMD/E9YpgTu3g4ED+Rw3GXdQV3/07g2fOwsJC8kVCGqK/zs3NBVdXV60a
4n6WSqXQ29tLbTz3xMXFUV6jBvMPjK/q8xvmNenp6ZznjIyM0H245zG/lsvl
v/zs+x4wrx8fH9fZ5/7+nhc72GCOWFtby/ONbFBn7IPxXBt4psbzNBZchyIi
IiIi2vkXzmSFOg==
     "], {{0, 0}, {81., 24.}}, {0, 255}, ColorFunction -> 
     RGBColor], {
    ImageSize -> {107.98366127023661`, 32.67741967621419}, 
     ImageSize -> {53.991830635118305`, 16.338709838107096`}, 
     BaselinePosition -> Scaled[0.32439307852814453`], 
     PlotRange -> {{0, 81.}, {0, 24.}}}]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.827166733450036*^9, 3.827166774138913*^9}, {
   3.827167070152416*^9, 3.82716709273092*^9}, 3.827167215529517*^9, 
   3.827167533973171*^9, 3.827167604348481*^9, 3.827167727190476*^9, {
   3.827167886636312*^9, 3.8271679096896963`*^9}, {3.827167945218277*^9, 
   3.827167967587296*^9}, {3.8271680183214617`*^9, 3.827168033938485*^9}, {
   3.827168097089674*^9, 3.827168148270137*^9}, 3.8271682031783953`*^9, 
   3.827168266357757*^9, 3.82716831974048*^9, 3.827168359507556*^9, 
   3.827168755103039*^9, 3.827168972859764*^9, 3.8271690513081627`*^9, 
   3.827313478644691*^9, 3.827313551418166*^9, 3.8273137085341663`*^9, 
   3.82731377453487*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"d386b38e-5217-4512-89a7-8f792af95c56"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<hist.pdf\>\"", ",", "h1"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.8271683608600807`*^9, 3.827168369608983*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"7b4f4eed-3547-46ba-85ef-968ca18e1ab3"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1256.7272727272727`, 706.909090909091},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.2 for Linux x86 (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"5353ef10-11dc-4ce9-81da-1538867cb507"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 270, 6, 158, "Title",ExpressionUUID->"d42c93f8-3191-4e30-be36-3dde0204c4cc"],
Cell[CellGroupData[{
Cell[875, 32, 152, 3, 69, "Chapter",ExpressionUUID->"3d09c5ea-752d-4c4f-a012-64278d04bc23"],
Cell[1030, 37, 175, 3, 34, "Text",ExpressionUUID->"001e4823-fdd1-4035-a269-fdf403504035"],
Cell[1208, 42, 269, 5, 29, "Input",ExpressionUUID->"0a04ed06-d6bb-43e6-892c-f3f5e8e970d5"],
Cell[1480, 49, 243, 4, 29, "Input",ExpressionUUID->"a8d4243b-adb4-4e4d-8956-39ee4ea7c9e5"],
Cell[1726, 55, 185, 3, 34, "Text",ExpressionUUID->"c015a181-08ea-4efb-8727-2d1edc49f4bc"],
Cell[CellGroupData[{
Cell[1936, 62, 231, 3, 29, "Input",ExpressionUUID->"8ee46fee-7977-40ce-937d-18b8f90424d2"],
Cell[2170, 67, 1187, 17, 33, "Output",ExpressionUUID->"5694519d-784d-410b-95a1-5f8cffcfd1f9"]
}, Open  ]],
Cell[3372, 87, 174, 3, 34, "Text",ExpressionUUID->"d64872c0-f310-494e-8717-bac848cf90bc"],
Cell[3549, 92, 442, 11, 29, "Input",ExpressionUUID->"c2ba97e5-b6eb-485e-864c-5974b0fc9741"],
Cell[CellGroupData[{
Cell[4016, 107, 272, 5, 29, "Input",ExpressionUUID->"7a63c740-0a7d-4ca4-bb5d-cac948d6973d"],
Cell[4291, 114, 735, 13, 33, "Output",ExpressionUUID->"7aef2ca4-12b8-446a-b15a-9f342372df45"]
}, Open  ]],
Cell[5041, 130, 472, 9, 29, "Input",ExpressionUUID->"792cdd12-7100-4ff6-9dbc-013f752cb89d"],
Cell[5516, 141, 172, 3, 34, "Text",ExpressionUUID->"1eaa547c-6569-4449-a695-7940d9a4b742"],
Cell[5691, 146, 416, 8, 29, "Input",ExpressionUUID->"e071a4cf-2ea1-4085-b30b-cb4ff9c0157d"],
Cell[6110, 156, 165, 3, 34, "Text",ExpressionUUID->"9cb9ab1f-be38-4da0-adb5-d8b78ff85698"],
Cell[6278, 161, 308, 6, 29, "Input",ExpressionUUID->"2e557ac2-7b49-4247-be2d-c0c43a10c4be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6623, 172, 209, 4, 69, "Chapter",ExpressionUUID->"4cd045fb-094e-4f4f-980f-bbcb0fd009ee"],
Cell[CellGroupData[{
Cell[6857, 180, 181, 3, 67, "Section",ExpressionUUID->"19becd8e-f7ae-4d6a-85aa-08cddec827ce"],
Cell[7041, 185, 407, 10, 34, "Text",ExpressionUUID->"602257ec-2f08-4d92-8f08-705c733b03a9"],
Cell[CellGroupData[{
Cell[7473, 199, 462, 8, 29, "Input",ExpressionUUID->"b1180962-9554-4c9e-9e0b-fafe17ab9ca3"],
Cell[7938, 209, 3015, 75, 107, "Output",ExpressionUUID->"5d34a70f-b8c8-4a5c-af6c-d75a870935cd"]
}, Open  ]],
Cell[10968, 287, 174, 3, 34, "Text",ExpressionUUID->"9df4be3d-c4a6-4dcb-a056-90d97d077e72"],
Cell[CellGroupData[{
Cell[11167, 294, 284, 6, 29, "Input",ExpressionUUID->"1e01f5ef-9f74-4510-a6bd-4fa014cf73f1"],
Cell[11454, 302, 2647, 70, 107, "Output",ExpressionUUID->"290eeb70-80f0-472a-aa58-71a0172a204d"]
}, Open  ]],
Cell[14116, 375, 202, 4, 34, "Text",ExpressionUUID->"cc683ca3-b6ea-4afb-93bb-1401172aaa64"],
Cell[CellGroupData[{
Cell[14343, 383, 329, 6, 29, "Input",ExpressionUUID->"6638173a-8198-4d4c-8b8f-74d39fcb79c1"],
Cell[14675, 391, 482, 7, 33, "Output",ExpressionUUID->"54816438-40b5-4c40-82ba-66a7882737ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15194, 403, 259, 5, 29, "Input",ExpressionUUID->"d9e5c53d-1902-46c2-b7a1-7f469c76bb12"],
Cell[15456, 410, 506, 7, 33, "Output",ExpressionUUID->"1b8c0c4d-7071-400e-a118-af1bcdbfd2a5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16011, 423, 227, 4, 67, "Section",ExpressionUUID->"99b3cbcf-d971-4344-866d-da4a790de1d7"],
Cell[16241, 429, 396, 10, 34, "Text",ExpressionUUID->"22635e6a-b5c1-4318-bcd0-62d679df5ca1"],
Cell[16640, 441, 472, 13, 34, "Text",ExpressionUUID->"984f897a-9b53-43bf-b8d8-e0c9a45ce6d5"],
Cell[17115, 456, 924, 18, 29, "Input",ExpressionUUID->"5983cd09-0daf-4f3f-b5af-30ab40287693"],
Cell[18042, 476, 181, 3, 34, "Text",ExpressionUUID->"ce8f2ca1-e5eb-486d-a5c5-115d1c26ad27"],
Cell[18226, 481, 972, 21, 29, "Input",ExpressionUUID->"a0ee2a23-de05-4a8d-acd7-812c0e68b2dd"],
Cell[19201, 504, 712, 14, 29, "Input",ExpressionUUID->"1c87ddf6-b093-4d08-b0ba-0cfc8eb4a86b"],
Cell[CellGroupData[{
Cell[19938, 522, 280, 6, 29, "Input",ExpressionUUID->"261e002e-cdc8-4d9a-9eae-135753d9c438"],
Cell[20221, 530, 68924, 1720, 500, "Output",ExpressionUUID->"e1fbaef7-78ad-461f-b4a6-63cac2b9a1ea"]
}, Open  ]],
Cell[89160, 2253, 296, 7, 34, "Text",ExpressionUUID->"1ca06b98-47e1-4efa-8323-ebab0eed94b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89493, 2265, 164, 3, 67, "Section",ExpressionUUID->"6e7e25ab-1fc3-4b6a-a255-cd38e6c48cf2"],
Cell[89660, 2270, 298, 9, 34, "Text",ExpressionUUID->"58c8d84c-7843-4171-9816-6971bdc6bd83"],
Cell[CellGroupData[{
Cell[89983, 2283, 375, 8, 29, "Input",ExpressionUUID->"a27dcc9d-a324-48f0-85d7-3e27564d7b49"],
Cell[90361, 2293, 718, 12, 33, "Output",ExpressionUUID->"39bf93e7-700c-4927-9209-4665ebf02e4a"]
}, Open  ]],
Cell[91094, 2308, 184, 3, 34, "Text",ExpressionUUID->"8c2750ab-d4e8-417b-81d1-cb610f0299ee"],
Cell[91281, 2313, 345, 8, 29, "Input",ExpressionUUID->"76f4b211-7a11-4f17-9ab2-50701a18d26e"],
Cell[CellGroupData[{
Cell[91651, 2325, 348, 8, 31, "Input",ExpressionUUID->"171acfda-cd23-4b99-90f3-99f7d8c69570"],
Cell[92002, 2335, 743, 12, 33, "Output",ExpressionUUID->"9bef68f0-cb2d-4dad-bb47-d20d508af59f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92782, 2352, 747, 17, 29, "Input",ExpressionUUID->"8607ca61-944a-4493-aba4-47a30a25f408"],
Cell[93532, 2371, 3752, 78, 236, "Output",ExpressionUUID->"3b7c0265-d46c-486f-8722-22e98f835d50"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[97345, 2456, 157, 3, 69, "Chapter",ExpressionUUID->"b29e6f5f-433a-4583-b25d-75b5e787974c"],
Cell[97505, 2461, 247, 4, 34, "Text",ExpressionUUID->"414c557f-6ce6-4d13-b25f-bac089a2fb9a"],
Cell[97755, 2467, 389, 8, 34, "Text",ExpressionUUID->"db12864e-e869-4e5b-9dcf-ebb53f229f9b"],
Cell[98147, 2477, 298, 8, 34, "Text",ExpressionUUID->"328450d0-1e04-43bb-8ea0-b396b9d5bbcb"],
Cell[98448, 2487, 691, 12, 29, "Input",ExpressionUUID->"833d6c19-ed3f-42a6-9c0b-7831268d1c28"],
Cell[99142, 2501, 206, 3, 29, "Input",ExpressionUUID->"5b775332-3904-4685-8744-ed6bfc485fe5"],
Cell[99351, 2506, 1166, 23, 29, "Input",ExpressionUUID->"066796f0-d4dd-4817-a10a-c4dfd0e902aa"],
Cell[100520, 2531, 168, 3, 34, "Text",ExpressionUUID->"f3373967-7fbe-4509-955b-55c1dc2921b1"],
Cell[100691, 2536, 336, 7, 29, "Input",ExpressionUUID->"76f543e5-337c-4914-87a5-39057df5d0b6"],
Cell[101030, 2545, 309, 5, 29, "Input",ExpressionUUID->"b392e004-d02b-4865-8b85-759747245e3e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101376, 2555, 153, 3, 69, "Chapter",ExpressionUUID->"b8c644a4-b24f-43a1-be8d-04e62d884755"],
Cell[101532, 2560, 163, 3, 34, "Text",ExpressionUUID->"fc51d4d9-a97c-4618-a569-3a669b314868"],
Cell[101698, 2565, 205, 3, 29, "Input",ExpressionUUID->"8ab57884-0489-499d-9f87-1d29c5a6865e"],
Cell[101906, 2570, 300, 5, 29, "Input",ExpressionUUID->"36a94fbe-ac14-45e7-afb5-c53dd4e919f4"],
Cell[102209, 2577, 690, 16, 34, "Text",ExpressionUUID->"6f2b589d-4a8e-4692-9f68-6c0df4c0f47a"],
Cell[102902, 2595, 195, 3, 29, "Input",ExpressionUUID->"c62f0101-f3cf-4e6d-91bc-ef1996db7c7b"],
Cell[CellGroupData[{
Cell[103122, 2602, 370, 7, 29, "Input",ExpressionUUID->"98cf47b8-de8f-4085-908d-d7cf26af7793"],
Cell[103495, 2611, 149806, 2731, 269, "Output",ExpressionUUID->"94ec461f-6a1b-484a-972e-33e4483a1aa5"]
}, Open  ]],
Cell[253316, 5345, 1042, 27, 38, "Text",ExpressionUUID->"2b0cbe50-7fa7-4f01-b72b-10027907c823"],
Cell[254361, 5374, 438, 10, 29, "Input",ExpressionUUID->"151203d8-674f-46d3-a6c9-ac0179412071"],
Cell[CellGroupData[{
Cell[254824, 5388, 262, 5, 29, "Input",ExpressionUUID->"2a74a5b9-7fe0-4100-9a7b-71fa5a2aa510"],
Cell[255089, 5395, 29996, 531, 155, "Output",ExpressionUUID->"b8c76135-f08b-4eab-99b4-728df0045782"]
}, Open  ]],
Cell[CellGroupData[{
Cell[285122, 5931, 359, 8, 29, "Input",ExpressionUUID->"4393533f-f9a2-4114-9f06-2086fcf64d5d"],
Cell[285484, 5941, 371, 7, 33, "Output",ExpressionUUID->"8f124641-7299-4cb9-a3be-d4f099afb9e0"]
}, Open  ]],
Cell[285870, 5951, 181, 3, 34, "Text",ExpressionUUID->"38f7c6ec-fcca-404b-a993-4920879dba5f"],
Cell[286054, 5956, 1543, 33, 50, "Input",ExpressionUUID->"c0343931-4fd6-45f4-a1f1-e5ffcacd9754"],
Cell[287600, 5991, 741, 17, 71, "Input",ExpressionUUID->"e09487af-a69e-47f9-aab2-746e4b287d47"],
Cell[CellGroupData[{
Cell[288366, 6012, 2080, 44, 71, "Input",ExpressionUUID->"10755343-e564-4ce2-a30d-59ff776aad5c"],
Cell[290449, 6058, 33366, 672, 387, "Output",ExpressionUUID->"960bebbd-ca11-4288-b6bf-99740ac749bd"]
}, Open  ]],
Cell[323830, 6733, 268, 5, 29, "Input",ExpressionUUID->"26c71121-78ca-467b-b1f8-16c2c664dffa"],
Cell[CellGroupData[{
Cell[324123, 6742, 1621, 34, 71, "Input",ExpressionUUID->"447ca743-bfa2-45cf-b3e3-4a296a3fb1dd"],
Cell[325747, 6778, 138549, 2729, 421, "Output",ExpressionUUID->"d386b38e-5217-4512-89a7-8f792af95c56"]
}, Open  ]],
Cell[464311, 9510, 264, 5, 29, "Input",ExpressionUUID->"7b4f4eed-3547-46ba-85ef-968ca18e1ab3"]
}, Open  ]]
}, Open  ]]
}
]
*)

